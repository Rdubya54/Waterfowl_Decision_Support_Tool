{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/biweekly-water-food/biweekly-water-food.component.css","webpack:///./src/app/components/biweekly-water-food/biweekly-water-food.component.html","webpack:///./src/app/components/biweekly-water-food/biweekly-water-food.component.ts","webpack:///./src/app/components/biweekly-water-food/bottom-sheet-overview-example-sheet.css","webpack:///./src/app/components/biweekly-water-food/bottom-sheet-overview-example-sheet.html","webpack:///./src/app/components/data-review/data-review.component.css","webpack:///./src/app/components/data-review/data-review.component.html","webpack:///./src/app/components/data-review/data-review.component.ts","webpack:///./src/app/components/food-avail/food-avail.component.css","webpack:///./src/app/components/food-avail/food-avail.component.html","webpack:///./src/app/components/food-avail/food-avail.component.ts","webpack:///./src/app/components/nav-bars/nav-bars.component.css","webpack:///./src/app/components/nav-bars/nav-bars.component.html","webpack:///./src/app/components/nav-bars/nav-bars.component.ts","webpack:///./src/app/components/pump-management/pump-management.component.css","webpack:///./src/app/components/pump-management/pump-management.component.html","webpack:///./src/app/components/pump-management/pump-management.component.ts","webpack:///./src/app/components/pump-table/pump-table.component.css","webpack:///./src/app/components/pump-table/pump-table.component.html","webpack:///./src/app/components/pump-table/pump-table.component.ts","webpack:///./src/app/components/watermanagement/watermanagement.component.css","webpack:///./src/app/components/watermanagement/watermanagement.component.html","webpack:///./src/app/components/watermanagement/watermanagement.component.ts","webpack:///./src/app/components/weather/weather.component.css","webpack:///./src/app/components/weather/weather.component.html","webpack:///./src/app/components/weather/weather.component.ts","webpack:///./src/app/dialog-overview-example-dialog.html","webpack:///./src/app/extra/globals.ts","webpack:///./src/app/login-dialog.html","webpack:///./src/app/material.module.ts","webpack:///./src/app/model/food-avail.ts","webpack:///./src/app/model/water-food.ts","webpack:///./src/app/model/watermanagement.ts","webpack:///./src/app/model/weather.ts","webpack:///./src/app/service/base.service.ts","webpack:///./src/app/service/chart.service.ts","webpack:///./src/app/service/food-avail-local.service.ts","webpack:///./src/app/service/idb.service.ts","webpack:///./src/app/service/location.service.ts","webpack:///./src/app/service/map-serviceex.service.ts","webpack:///./src/app/service/waterfood-local.service.ts","webpack:///./src/app/service/watermanagement-cloud.service.ts","webpack:///./src/app/service/watermanagement-local.service.ts","webpack:///./src/app/service/weather-api-service.service.ts","webpack:///./src/app/service/weather-cloud.service.ts","webpack:///./src/app/service/weather-local.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { WatermanagementComponent } from 'src/app/components/watermanagement/watermanagement.component';\nimport { DataReviewComponent } from './components/data-review/data-review.component';\nimport { Weather } from './model/weather';\nimport { WeatherComponent } from './components/weather/weather.component';\nimport {BiweeklyWaterFoodComponent} from './components/biweekly-water-food/biweekly-water-food.component'\nimport { FoodAvailComponent } from './components/food-avail/food-avail.component';\nimport {PumpManagementComponent} from './components/pump-management/pump-management.component'\nimport { PumpTableComponent } from './components/pump-table/pump-table.component';\n\n\nconst routes: Routes = [\n  { path: 'watermanagement', component: WatermanagementComponent },\n  { path: 'datareview', component: DataReviewComponent },\n  {path:'weather',component:WeatherComponent},\n  {path:'waterfood',component:BiweeklyWaterFoodComponent},\n  {path:'fallfood',component:FoodAvailComponent},\n  {path:'pumpmanagement',component:PumpManagementComponent},\n  {path:'pumptable',component:PumpTableComponent},\n];\n\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<!-- <div style=\\\"text-align:center\\\">\\n  <p>\\n    Api Cache Test\\n  </p>\\n\\n  <p *ngIf=\\\"datapeice\\\"> {{ datapeice.value }}</p>\\n</div> -->\\n\\n<app-nav-bars></app-nav-bars>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component, ModuleWithComponentFactories,Inject } from '@angular/core';\nimport {SwUpdate} from '@angular/service-worker';\nimport { ConnectionService } from 'ng-connection-service';\nimport { stripSummaryForJitFileSuffix } from '@angular/compiler/src/aot/util';\nimport {Globals} from 'src/app/extra/globals';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n\n  isConnected = true;\n  title = 'ducks';\n  datapeice: any;\n  public role:string;\n  public logged_in:boolean;\n  online_status=false;\n\n  //this makes sure updates are properly loaded.\n  //needed cause pwas caching can make it hard to seee updates\n  constructor(private connectionService:ConnectionService,updates:SwUpdate,public globals:Globals,public dialog: MatDialog){\n    \n    this.role=globals.role;\n    this.logged_in=globals.logged_in;\n\n    //this is only run when the connection status changes\n    this.connectionService.monitor().subscribe(isConnected => {\n      this.isConnected = isConnected;\n      if (this.isConnected) {\n        this.globals.role = \"online\";\n        this.openDialog();\n      }\n      else {\n        this.globals.role = \"offline\";\n        this.openDialog();\n      }\n    })\n  }\n\n  openDialog(): void {\n      const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n        width: '250px',\n      });\n\n      dialogRef.afterClosed().subscribe(result => {\n        console.log('The dialog was closed');\n      });\n  }\n\n  openLoginDialog(): void {\n    const dialogRef = this.dialog.open(LoginDialog, {\n      width: '250px',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n    });\n}\n\n  onlineCheck() {\n      this.online_status = window.navigator.onLine;\n\n      if (this.online_status){\n        this.globals.role=\"online\";\n        this.openLoginDialog();\n        \n      }      \n\n      else{\n        this.globals.role=\"offline\";\n      }\n\n  }\n\n\n   ngOnInit(){\n    this.onlineCheck();\n  } \n\n\n}\n\n\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: 'dialog-overview-example-dialog.html',\n})\nexport class DialogOverviewExampleDialog {\n\n  offline_message=\"No Internet Connection Detected! Data will be stored locally in browser and pushed to Cloud\\\n  once the app is lauched again with a connection.\";\n\n  online_message=\"Internet Connection Detected! Login and then any data entered will be pushed directly to the cloud.\\\n  Any locally stored data is now being pushed to the Cloud.\";\n\n  constructor(public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,public globals:Globals) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\n@Component({\n  selector: 'login-dialog',\n  templateUrl: 'login-dialog.html',\n})\nexport class LoginDialog {  \n  username: string;\n  password: string;\n\n  constructor(public dialogRef: MatDialogRef<LoginDialog>,public globals:Globals) {}\n\n  login() : void {\n    if(this.username == 'admin' && this.password == 'admin'){\n     //this.router.navigate([\"user\"]);\n     console.log('success')\n     this.globals.logged_in=true;\n     this.dialogRef.close();\n    }else {\n      console.log(\"Invalid credentials\");\n    }\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n//I used angular fire 2 which is deprecated but you can still use\nimport { environment } from '../environments/environment';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\nimport { FormsModule }   from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { MaterialModule } from './material.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { WatermanagementComponent } from 'src/app/components/watermanagement/watermanagement.component';\nimport {Globals} from 'src/app/extra/globals';\nimport { from } from 'rxjs';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n//import { ChartsModule } from 'ng4-charts/ng4-charts';\nimport { ChartsModule } from 'ng2-charts/ng2-charts';\n\nimport {MatExpansionModule} from '@angular/material/expansion';\n\nimport * as firebase from 'firebase/app';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { DataReviewComponent } from './components/data-review/data-review.component';\nimport { NavBarsComponent } from './components/nav-bars/nav-bars.component';\nimport { WeatherComponent } from './components/weather/weather.component';\nimport { LocalWaterManagementService } from 'src/app/service/watermanagement-local.service';\nimport { BiweeklyWaterFoodComponent, BottomSheetOverviewExampleSheet} from './components/biweekly-water-food/biweekly-water-food.component';\nimport { FoodAvailComponent } from './components/food-avail/food-avail.component';\nimport { PumpManagementComponent } from './components/pump-management/pump-management.component';\nimport { PumpTableComponent } from './components/pump-table/pump-table.component';\nimport { MapServiceexService } from './service/map-serviceex.service';\n\nimport {DialogOverviewExampleDialog} from 'src/app/app.component';\nimport {LoginDialog} from 'src/app/app.component';\n\nfirebase.initializeApp(environment.firebase);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WatermanagementComponent,\n    DataReviewComponent,\n    NavBarsComponent,\n    WeatherComponent,\n    BiweeklyWaterFoodComponent,\n    FoodAvailComponent,\n    PumpManagementComponent,\n    PumpTableComponent,\n    BottomSheetOverviewExampleSheet,\n    DialogOverviewExampleDialog,\n    LoginDialog\n  ],\n  imports: [\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule,\n    AngularFirestoreModule.enablePersistence(),\n    AppRoutingModule,\n    HttpClientModule,\n    MaterialModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    FlexLayoutModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: true }),\n    ChartsModule,\n    MatExpansionModule\n  ],\n  entryComponents: [BiweeklyWaterFoodComponent, BottomSheetOverviewExampleSheet,DialogOverviewExampleDialog,LoginDialog],\n  providers: [Globals,\n    LocalWaterManagementService,\n WatermanagementComponent,MapServiceexService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","module.exports = \".wmgmt{\\r\\n    width: 80%;\\r\\n}\\r\\n\\r\\n.notes{\\r\\n  width:100%;\\r\\n}\\r\\n\\r\\n.prev{\\r\\n  width:40%;\\r\\n}\\r\\n\\r\\n.small_button {\\r\\n    min-width: 50%;\\r\\n}\\r\\n\\r\\nmat-card {\\r\\n  width: calc(100% - 40px);\\r\\n  height: calc(100% - 40px);\\r\\n}\\r\\n\\r\\n.previous{\\r\\n  font-size: 10px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9iaXdlZWtseS13YXRlci1mb29kL2Jpd2Vla2x5LXdhdGVyLWZvb2QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7Q0FDZDs7QUFFRDtFQUNFLFdBQVc7Q0FDWjs7QUFFRDtFQUNFLFVBQVU7Q0FDWDs7QUFFRDtJQUNJLGVBQWU7Q0FDbEI7O0FBRUQ7RUFDRSx5QkFBeUI7RUFDekIsMEJBQTBCO0NBQzNCOztBQUVEO0VBQ0UsZ0JBQWdCO0NBQ2pCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9iaXdlZWtseS13YXRlci1mb29kL2Jpd2Vla2x5LXdhdGVyLWZvb2QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi53bWdtdHtcclxuICAgIHdpZHRoOiA4MCU7XHJcbn1cclxuXHJcbi5ub3Rlc3tcclxuICB3aWR0aDoxMDAlO1xyXG59XHJcblxyXG4ucHJldntcclxuICB3aWR0aDo0MCU7XHJcbn1cclxuXHJcbi5zbWFsbF9idXR0b24ge1xyXG4gICAgbWluLXdpZHRoOiA1MCU7XHJcbn1cclxuXHJcbm1hdC1jYXJkIHtcclxuICB3aWR0aDogY2FsYygxMDAlIC0gNDBweCk7XHJcbiAgaGVpZ2h0OiBjYWxjKDEwMCUgLSA0MHB4KTtcclxufVxyXG5cclxuLnByZXZpb3Vze1xyXG4gIGZvbnQtc2l6ZTogMTBweDtcclxufSJdfQ== */\"","module.exports = \"<h1>Biweekly Water Status And Food Availability</h1>\\n<mat-grid-list [cols]=\\\"breakpoint\\\" rowHeight=\\\"875px\\\" (window:resize)=\\\"onResize($event)\\\">\\n<mat-grid-tile>\\n<mat-card class=\\\"example-container\\\">\\n<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n    <div fxFlex=\\\"50%\\\"> \\n        <mat-form-field class=\\\"wmgmt\\\">\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterFood.month\\\" [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Month\\\">\\n        </mat-form-field>\\n        /\\n    </div> \\n    <div fxFlex=\\\"50%\\\">\\n        <mat-form-field class=\\\"wmgmt\\\">  \\n                <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterFood.day\\\" [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Day\\\">\\n        </mat-form-field>\\n    </div> \\n</div> \\n\\n<div>\\n  <mat-form-field>\\n  <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterFood.pool\\\" [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Pool\\\">\\n  </mat-form-field>\\n</div>\\n\\n<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n        <div fxFlex=\\\"75%\\\">\\n\\n        </div>\\n        <div class=\\\"previous\\\" fxFlex=\\\"25%\\\">\\n                Previous Entry\\n        </div> \\n</div>\\n\\n\\n<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n    <div fxFlex=\\\"75%\\\">\\n        <mat-form-field class=\\\"wmgmt\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterFood.percent_of_full_pool\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Percent of Full Pool\\\">\\n        </mat-form-field>\\n    </div> \\n    <div fxFlex=\\\"25%\\\">\\n            <mat-form-field class=\\\"wmgmt\\\" *ngIf=\\\"this.previous_records\\\"> \\n                <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.percent_of_full_pool\\\" [disabled]='true' matInput placeholder=\\\"\\\">\\n            </mat-form-field>\\n        </div> \\n</div>\\n\\n\\n<h3>Percent of Pool Flooded at Following Depths</h3>\\n\\n<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n        <div fxFlex=\\\"75%\\\">\\n\\n        </div>\\n        <div class=\\\"previous\\\" fxFlex=\\\"25%\\\">\\n                Previous Entry\\n        </div> \\n</div>\\n\\n<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.7%\\\">\\n    <div fxFlex=\\\"75%\\\"> \\n        <mat-form-field class=\\\"wmgmt\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterFood.less_than_six\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Less than 6 inches\\\">\\n        </mat-form-field>\\n    </div> \\n    <div fxFlex=\\\"25%\\\">\\n        <mat-form-field class=\\\"wmgmt\\\" *ngIf=\\\"this.previous_records\\\"> \\n            <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.less_than_six\\\" [disabled]='true' matInput placeholder=\\\"\\\">\\n        </mat-form-field>\\n    </div> \\n</div>\\n\\n<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n    <div fxFlex=\\\"75%\\\"> \\n        <mat-form-field class=\\\"wmgmt\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterFood.seven_to_twelve\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"7-12 inches\\\">\\n        </mat-form-field>\\n    </div> \\n    <div fxFlex=\\\"25%\\\">\\n        <mat-form-field class=\\\"wmgmt\\\" *ngIf=\\\"this.previous_records\\\"> \\n            <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.seven_to_twelve\\\" [disabled]='true' matInput placeholder=\\\"\\\">\\n        </mat-form-field>\\n    </div> \\n</div>\\n\\n<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n    <div fxFlex=\\\"75%\\\"> \\n        <mat-form-field class=\\\"wmgmt\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterFood.thirteen_or_more\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"13 or more inches\\\">\\n        </mat-form-field>\\n    </div> \\n    <div fxFlex=\\\"25%\\\">\\n        <mat-form-field class=\\\"wmgmt\\\" *ngIf=\\\"this.previous_records\\\" > \\n            <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.thirteen_or_more\\\" [disabled]='true' matInput placeholder=\\\"\\\">\\n        </mat-form-field>\\n    </div> \\n</div>\\n</mat-card>\\n</mat-grid-tile>\\n\\n\\n\\n<mat-grid-tile>\\n<mat-card>\\n<h3>Percentage of Habitat Flooded</h3>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n        <div fxFlex=\\\"75%\\\">\\n\\n        </div>\\n        <div class=\\\"previous\\\" fxFlex=\\\"25%\\\">\\n                Previous Entry\\n        </div> \\n    </div>\\n\\n     <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n        <div fxFlex=\\\"75%\\\"> \\n            <mat-form-field class=\\\"wmgmt\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterFood.habitat_standing\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Moist Soil Standing\\\">\\n            </mat-form-field>\\n        </div> \\n        <div fxFlex=\\\"25%\\\">\\n            <mat-form-field class=\\\"wmgmt\\\" *ngIf=\\\"this.previous_records\\\" > \\n                <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.habitat_standing\\\" [disabled]='true'  matInput placeholder=\\\"\\\">\\n            </mat-form-field>\\n        </div> \\n    </div>\\n\\n    \\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n        <div fxFlex=\\\"75%\\\"> \\n                <mat-form-field class=\\\"wmgmt\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterFood.habitat_mowed\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Moist Soil Mowed\\\">\\n                  </mat-form-field>   \\n        </div> \\n        <div fxFlex=\\\"25%\\\">\\n            <mat-form-field class=\\\"wmgmt\\\" *ngIf=\\\"this.previous_records\\\"> \\n                <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.habitat_mowed\\\" [disabled]='true' matInput placeholder=\\\"\\\">\\n            </mat-form-field>\\n        </div> \\n    </div>\\n    \\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n        <div fxFlex=\\\"75%\\\"> \\n                <mat-form-field class=\\\"wmgmt\\\">\\n                    <input type=\\\"text\\\"  [(ngModel)]=\\\"newWaterFood.habitat_disced\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Moist Soil Disced\\\">\\n                  </mat-form-field>   \\n        </div> \\n        <div fxFlex=\\\"25%\\\">\\n            <mat-form-field class=\\\"wmgmt\\\" *ngIf=\\\"this.previous_records\\\"> \\n    \\n                <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.habitat_disced\\\" [disabled]='true' matInput placeholder=\\\"\\\">\\n            </mat-form-field>\\n        </div> \\n    </div>\\n    \\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n            <div fxFlex=\\\"75%\\\"> \\n                <mat-form-field class=\\\"wmgmt\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterFood.habitat_unharv_corn\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Unharvested Corn\\\">\\n                </mat-form-field>\\n            </div> \\n            <div fxFlex=\\\"25%\\\">\\n                <mat-form-field class=\\\"wmgmt\\\" *ngIf=\\\"this.previous_records\\\" > \\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.habitat_unharv_corn\\\" [disabled]='true'  matInput placeholder=\\\"\\\">\\n                </mat-form-field>\\n            </div> \\n    </div>\\n        \\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n            <div fxFlex=\\\"75%\\\"> \\n                    <mat-form-field class=\\\"wmgmt\\\">\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterFood.habitat_harv_corn\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Harvested Corn\\\">\\n                      </mat-form-field>   \\n            </div> \\n            <div fxFlex=\\\"25%\\\">\\n                <mat-form-field class=\\\"wmgmt\\\" *ngIf=\\\"this.previous_records\\\"> \\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.habitat_harv_corn\\\" [disabled]='true' matInput placeholder=\\\"\\\">\\n                </mat-form-field>\\n            </div> \\n        </div>\\n        \\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n            <div fxFlex=\\\"75%\\\"> \\n                    <mat-form-field class=\\\"wmgmt\\\">\\n                        <input type=\\\"text\\\"  [(ngModel)]=\\\"newWaterFood.habitat_unharv_milo\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Unharvested Milo\\\">\\n                      </mat-form-field>   \\n            </div> \\n            <div fxFlex=\\\"25%\\\">\\n                <mat-form-field class=\\\"wmgmt\\\" *ngIf=\\\"this.previous_records\\\"> \\n        \\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.habitat_unharv_milo\\\" [disabled]='true' matInput placeholder=\\\"\\\">\\n                </mat-form-field>\\n            </div> \\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                <div fxFlex=\\\"75%\\\"> \\n                        <mat-form-field class=\\\"wmgmt\\\">\\n                            <input type=\\\"text\\\"  [(ngModel)]=\\\"newWaterFood.habitat_harv_milo\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Harvested Milo\\\">\\n                          </mat-form-field>   \\n                </div> \\n                <div fxFlex=\\\"25%\\\">\\n                    <mat-form-field class=\\\"wmgmt\\\" *ngIf=\\\"this.previous_records\\\"> \\n            \\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.habitat_harv_milo\\\" [disabled]='true' matInput placeholder=\\\"\\\">\\n                    </mat-form-field>\\n                </div> \\n            </div>\\n            \\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                    <div fxFlex=\\\"75%\\\"> \\n                        <mat-form-field class=\\\"wmgmt\\\">\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterFood.habitat_unharv_beans\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Unharvested Beans\\\">\\n                        </mat-form-field>\\n                    </div> \\n                    <div fxFlex=\\\"25%\\\">\\n                        <mat-form-field class=\\\"wmgmt\\\" *ngIf=\\\"this.previous_records\\\" > \\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.habitat_unharv_beans\\\" [disabled]='true'  matInput placeholder=\\\"\\\">\\n                        </mat-form-field>\\n                    </div> \\n            </div>\\n\\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                <div fxFlex=\\\"75%\\\"> \\n                    <mat-form-field class=\\\"wmgmt\\\">\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterFood.habitat_harv_beans\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Harvested Beans\\\">\\n                    </mat-form-field>\\n                </div> \\n                <div fxFlex=\\\"25%\\\">\\n                    <mat-form-field class=\\\"wmgmt\\\" *ngIf=\\\"this.previous_records\\\" > \\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.habitat_harv_beans\\\" [disabled]='true'  matInput placeholder=\\\"\\\">\\n                    </mat-form-field>\\n                </div> \\n        </div>\\n                \\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                    <div fxFlex=\\\"75%\\\"> \\n                            <mat-form-field class=\\\"wmgmt\\\">\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterFood.habitat_browse\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Green Browse\\\">\\n                              </mat-form-field>   \\n                    </div> \\n                    <div fxFlex=\\\"25%\\\">\\n                        <mat-form-field class=\\\"wmgmt\\\" *ngIf=\\\"this.previous_records\\\"> \\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.habitat_browse\\\" [disabled]='true' matInput placeholder=\\\"\\\">\\n                        </mat-form-field>\\n                    </div> \\n                </div> \\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"openBottomSheet()\\\">Moist Soil Seed Calculator</button>\\n    </mat-card>  \\n</mat-grid-tile>\\n \\n<mat-grid-tile>\\n        <mat-card>\\n        <h3>Percentage of Ice on Flooded Habitat</h3>\\n\\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                <div fxFlex=\\\"75%\\\">\\n        \\n                </div>\\n                <div class=\\\"previous\\\" fxFlex=\\\"25%\\\">\\n                        Previous Entry\\n                </div> \\n            </div>\\n        \\n             <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                <div fxFlex=\\\"75%\\\"> \\n                    <mat-form-field class=\\\"wmgmt\\\">\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterFood.ice_standing\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Moist Soil Standing\\\">\\n                    </mat-form-field>\\n                </div> \\n                <div fxFlex=\\\"25%\\\">\\n                    <mat-form-field class=\\\"wmgmt\\\" *ngIf=\\\"this.previous_records\\\" > \\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.ice_standing\\\" [disabled]='true'  matInput placeholder=\\\"\\\">\\n                    </mat-form-field>\\n                </div> \\n            </div>\\n        \\n            \\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                <div fxFlex=\\\"75%\\\"> \\n                        <mat-form-field class=\\\"wmgmt\\\">\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterFood.ice_mowed\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Moist Soil Mowed\\\">\\n                          </mat-form-field>   \\n                </div> \\n                <div fxFlex=\\\"25%\\\">\\n                    <mat-form-field class=\\\"wmgmt\\\" *ngIf=\\\"this.previous_records\\\"> \\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.ice_mowed\\\" [disabled]='true' matInput placeholder=\\\"\\\">\\n                    </mat-form-field>\\n                </div> \\n            </div>\\n            \\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                <div fxFlex=\\\"75%\\\"> \\n                        <mat-form-field class=\\\"wmgmt\\\">\\n                            <input type=\\\"text\\\"  [(ngModel)]=\\\"newWaterFood.ice_disced\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Moist Soil Disced\\\">\\n                          </mat-form-field>   \\n                </div> \\n                <div fxFlex=\\\"25%\\\">\\n                    <mat-form-field class=\\\"wmgmt\\\" *ngIf=\\\"this.previous_records\\\"> \\n            \\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.ice_disced\\\" [disabled]='true' matInput placeholder=\\\"\\\">\\n                    </mat-form-field>\\n                </div> \\n            </div>\\n            \\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                    <div fxFlex=\\\"75%\\\"> \\n                        <mat-form-field class=\\\"wmgmt\\\">\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterFood.ice_unharv_corn\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Unharvested Corn\\\">\\n                        </mat-form-field>\\n                    </div> \\n                    <div fxFlex=\\\"25%\\\">\\n                        <mat-form-field class=\\\"wmgmt\\\" *ngIf=\\\"this.previous_records\\\" > \\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.ice_unharv_corn\\\" [disabled]='true'  matInput placeholder=\\\"\\\">\\n                        </mat-form-field>\\n                    </div> \\n            </div>\\n                \\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                    <div fxFlex=\\\"75%\\\"> \\n                            <mat-form-field class=\\\"wmgmt\\\">\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterFood.ice_harv_corn\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Harvested Corn\\\">\\n                              </mat-form-field>   \\n                    </div> \\n                    <div fxFlex=\\\"25%\\\">\\n                        <mat-form-field class=\\\"wmgmt\\\" *ngIf=\\\"this.previous_records\\\"> \\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.ice_harv_corn\\\" [disabled]='true' matInput placeholder=\\\"\\\">\\n                        </mat-form-field>\\n                    </div> \\n                </div>\\n                \\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                    <div fxFlex=\\\"75%\\\"> \\n                            <mat-form-field class=\\\"wmgmt\\\">\\n                                <input type=\\\"text\\\"  [(ngModel)]=\\\"newWaterFood.ice_unharv_milo\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Unharvested Milo\\\">\\n                              </mat-form-field>   \\n                    </div> \\n                    <div fxFlex=\\\"25%\\\">\\n                        <mat-form-field class=\\\"wmgmt\\\" *ngIf=\\\"this.previous_records\\\"> \\n                \\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.ice_unharv_milo\\\" [disabled]='true' matInput placeholder=\\\"\\\">\\n                        </mat-form-field>\\n                    </div> \\n                </div>\\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                        <div fxFlex=\\\"75%\\\"> \\n                                <mat-form-field class=\\\"wmgmt\\\">\\n                                    <input type=\\\"text\\\"  [(ngModel)]=\\\"newWaterFood.ice_harv_milo\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Harvested Milo\\\">\\n                                  </mat-form-field>   \\n                        </div> \\n                        <div fxFlex=\\\"25%\\\">\\n                            <mat-form-field class=\\\"wmgmt\\\" *ngIf=\\\"this.previous_records\\\"> \\n                    \\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.ice_harv_milo\\\" [disabled]='true' matInput placeholder=\\\"\\\">\\n                            </mat-form-field>\\n                        </div> \\n                    </div>\\n                    \\n                    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                            <div fxFlex=\\\"75%\\\"> \\n                                <mat-form-field class=\\\"wmgmt\\\">\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterFood.ice_unharv_beans\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Unharvested Benas\\\">\\n                                </mat-form-field>\\n                            </div> \\n                            <div fxFlex=\\\"25%\\\">\\n                                <mat-form-field class=\\\"wmgmt\\\" *ngIf=\\\"this.previous_records\\\" > \\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.ice_unharv_beans\\\" [disabled]='true'  matInput placeholder=\\\"\\\">\\n                                </mat-form-field>\\n                            </div> \\n                    </div>\\n\\n                    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                        <div fxFlex=\\\"75%\\\"> \\n                            <mat-form-field class=\\\"wmgmt\\\">\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterFood.ice_harv_beans\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Harvested Benas\\\">\\n                            </mat-form-field>\\n                        </div> \\n                        <div fxFlex=\\\"25%\\\">\\n                            <mat-form-field class=\\\"wmgmt\\\" *ngIf=\\\"this.previous_records\\\" > \\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.ice_unharv_beans\\\" [disabled]='true'  matInput placeholder=\\\"\\\">\\n                            </mat-form-field>\\n                        </div> \\n                </div>\\n                        \\n                        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                            <div fxFlex=\\\"75%\\\"> \\n                                    <mat-form-field class=\\\"wmgmt\\\">\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterFood.ice_browse\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Green Browse\\\">\\n                                      </mat-form-field>   \\n                            </div> \\n                            <div fxFlex=\\\"25%\\\">\\n                                <mat-form-field class=\\\"wmgmt\\\" *ngIf=\\\"this.previous_records\\\"> \\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.ice_browse\\\" [disabled]='true' matInput placeholder=\\\"\\\">\\n                                </mat-form-field>\\n                            </div> \\n                        </div> \\n            </mat-card>  \\n        </mat-grid-tile>\\n        <mat-grid-tile>\\n                <mat-card>\\n                    <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"0.5%\\\">\\n                            <div> \\n                                <mat-form-field class=\\\"notes\\\">\\n                                <textarea [(ngModel)]=\\\"newWaterFood.notes\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Notes\\\" rows=\\\"5\\\" cols=\\\"40\\\"></textarea>\\n                              </mat-form-field>\\n                            </div> \\n                        </div>\\n            \\n                        <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"0.5%\\\">\\n                                <div> \\n                                    <mat-form-field class=\\\"notes\\\" *ngIf=\\\"this.previous_records\\\">\\n                                        <textarea [(ngModel)]=\\\"this.previous_records.notes\\\" [disabled]='true' matInput placeholder=\\\"Notes from Last Entry\\\" rows=5></textarea>\\n                                  </mat-form-field>\\n                                </div> \\n                        </div>\\n                      \\n                        <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"0.5%\\\">\\n                              <div> \\n                                  <mat-form-field class=\\\"notes\\\"> \\n                                  <textarea [(ngModel)]=\\\"newWaterFood.response\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Management Actions for Upcoming Week\\\" rows=5></textarea>\\n                                </mat-form-field>\\n                              </div> \\n                          </div>\\n                          <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"0.5%\\\">\\n                            <div> \\n                                <mat-form-field class=\\\"notes\\\" *ngIf=\\\"this.previous_records\\\"> \\n                                    <textarea [(ngModel)]=\\\"this.previous_records.response\\\" [disabled]='true' matInput placeholder=\\\"Management Actions Recorded Last Entry\\\" rows=5></textarea>\\n                                </mat-form-field>\\n                            </div> \\n                        </div>\\n                        <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"0.5%\\\">\\n                            <div> \\n                                <mat-form-field class=\\\"notes\\\">\\n                                <textarea [(ngModel)]=\\\"newWaterFood.response\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Response to Last Management Action\\\" rows=5 cols=40></textarea>\\n                              </mat-form-field>\\n                            </div> \\n                        </div>\\n                        <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"0.5%\\\">\\n                          <div> \\n                              <mat-form-field class=\\\"notes\\\" *ngIf=\\\"this.previous_records\\\"> \\n                                  <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.response\\\" [disabled]='true' matInput placeholder=\\\"Last Entry for Response to Last Management Action\\\" rows=10 cols=\\\"40\\\">\\n                              </mat-form-field>\\n                          </div> \\n                      </div>\\n                          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addWaterManagement()\\\">Add to Local Database</button>\\n                          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"clearNewWaterManagement()\\\">Clear Fields</button>\\n                    </mat-card>\\n            </mat-grid-tile>       \\n</mat-grid-list>\"","import { Component, OnInit} from '@angular/core';\nimport { LocalWaterFood } from 'src/app/service/waterfood-local.service';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport {MediaMatcher} from '@angular/cdk/layout';\nimport {ChangeDetectorRef, OnDestroy} from '@angular/core';\nimport {Globals} from 'src/app/extra/globals';\nimport {MatBottomSheet, MatBottomSheetRef} from '@angular/material';\n\nimport {\n  WaterFood,\n  IWaterFood\n} from 'src/app/model/water-food';\nimport { stringToKeyValue } from '@angular/flex-layout/extended/typings/style/style-transforms';\n\n\n@Component({\n  selector: 'app-biweekly-water-food',\n  templateUrl: './biweekly-water-food.component.html',\n  styleUrls: ['./biweekly-water-food.component.css']\n})\nexport class BiweeklyWaterFoodComponent implements OnInit {\n\n  breakpoint:number;\n\n  private localservice: LocalWaterFood;\n  watermanagements: any[];\n  newWaterFood: IWaterFood = new WaterFood();\n  local_records: any[];\n\n  public previous_records;\n  public second_previous_records;\n\n  public buttonName: any = true;\n  toggleActive:boolean = false;\n\n  constructor(private localService: LocalWaterFood,  private globals:Globals,\n    private firebase: AngularFireDatabase,private bottomSheet: MatBottomSheet) {\n      this.localservice = localService;\n  }\n\n  openBottomSheet(): void {\n    this.bottomSheet.open(BottomSheetOverviewExampleSheet);\n  }\n\n  ngOnInit() {\n    this.getWatermanagement();\n    this.breakpoint = (window.innerWidth <= 768) ? 1 : 4;\n\n    this.localservice.getWaterManagment().\n    then(students => {\n        this.watermanagements = students;\n\n        var listt=this.watermanagements;\n        this.previous_records=listt[0];\n\n      }).catch(error => {\n          console.error(error);\n          alert(error.message);\n      });\n\n  }\n\n  onResize(event) {\n    this.breakpoint = (event.target.innerWidth <= 768) ? 1 : 4;\n  }\n\n\n  getWatermanagement() {\n    this.localservice.getWaterManagment().\n    then(students => {\n        this.watermanagements = students;\n\n        var listt=this.watermanagements;\n\n        console.log(\"list is \"+listt)\n        for (let i = 0; i < listt.length; i++){\n          var second_to_last_entry=last_entry\n          console.log(\"it is \"+listt[i])\n          var last_entry=[listt[i].date,listt[i].elevation,listt[i].gate_manipulation,listt[i].gate_level,\n          listt[i].stoplog_change,listt[i].stoplog_level,listt[i].duck_numbers,listt[i].goose_numbers,listt[i].notes]\n          console.log(\"i am \"+listt[i].date)\n        }\n  \n        this.previous_records=last_entry;\n        this.second_previous_records=second_to_last_entry;\n        console.log(\"it is \"+this.previous_records);\n        console.log(\"it is \"+this.second_previous_records);\n      \n    }).catch(error => {\n        console.error(error);\n        alert(error.message);\n    });\n}\n\n  addWaterManagement() {\n\n\n    var status=this.globals.role;\n\n    //if app is offline, write to indexdb\n    if (status==\"offline\"){\n      this.localservice.addWaterManagement(this.newWaterFood).\n      then((addedWaterManagements: IWaterFood[]) => {\n      if (addedWaterManagements.length > 0) {\n        this.watermanagements.push(addedWaterManagements[0]);\n        this.clearNewWaterManagement();\n        alert('Successfully added');\n        location.reload();\n      }\n      })\n      .catch(error => {\n      console.error(error);\n      alert(error.message);\n      });\n    }\n\n\n  //if app is online, write to cloud (firestore for the time being)\n  else{\n    //this.cloudservice.addWaterManagement(this.newWaterManagement);    \n  }\n  }\n\n  clearNewWaterManagement() {\n    this.newWaterFood = new WaterFood();\n  }\n}\n\n///////code for moist soil calculator pop-up\n\nexport interface PeriodicElement {\n  Plant_Species: string;\n  Percent_of_Pool: string;\n  Number_of_Seed_Heads: any;\n  Plant_Height: string;\n  Seed_Height: string;\n  Seed_Diameter: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {Plant_Species: \"Millet\", Percent_of_Pool: \"\", Number_of_Seed_Heads: \"\", Plant_Height: '',Seed_Height:'',Seed_Diameter:''},\n  {Plant_Species: \"Foxtail\", Percent_of_Pool: \"\", Number_of_Seed_Heads: '', Plant_Height: '',Seed_Height:'',Seed_Diameter:''},\n];\n\n\n@Component({\n  selector: 'bottom-sheet-overview-example-sheet',\n  templateUrl: 'bottom-sheet-overview-example-sheet.html',\n  styleUrls: ['bottom-sheet-overview-example-sheet.css']\n})\nexport class BottomSheetOverviewExampleSheet {\n\n  displayedColumns: string[] = ['Plant_Species', 'Percent_of_Pool', 'Number_of_Seed_Heads', 'Plant_Height', 'Seed_Height','Seed_Diameter'];\n  dataSource = ELEMENT_DATA;\n\n  millet_output=\"\";\n  foxtail_output=\"\";\n\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheetOverviewExampleSheet>) {}\n\n  openLink(event: MouseEvent): void {\n    this.bottomSheetRef.dismiss();\n    event.preventDefault();\n  }\n\n  calculate_percent(type,seedhead,plantheight,seedheight,seeddiameter){\n\n    seedhead=this.get_median_of_range(seedhead);\n    plantheight=this.get_median_of_range(plantheight);\n    seedheight=this.get_median_of_range(seedheight);\n    seeddiameter=this.get_median_of_range(seeddiameter);\n\n    var π = 3.1416; \n    var r = seeddiameter/2;\n    var h = seedheight;\n    var HEADS=seedhead;\n    var seed_prod;\n\n    if (type==='Millet'){\n      //estimating seed production for millet/barnyard grass\n      seed_prod=(plantheight*3.67855) + (0.000696 * ((HEADS) * ((π*r*r*h)/3)))\n      this.millet_output=seed_prod;\n    }\n\n    else if (type==='Foxtail'){\n      this.foxtail_output=\"This part of app isn't functional yet\";\n    }\n\n    else{\n      this.millet_output=\"error\";\n    }\n  }\n\n  get_median_of_range(value_range) {\n\n    var increment=1;\n\n    var is_decimal = value_range.includes(\".\")\n\n    console.log(is_decimal)\n\n    if (is_decimal===true){\n      increment=0.01;\n    }\n\n    console.log(value_range)\n\n    var res = value_range.split(\"-\");\n    console.log(res[1])\n\n    var lower_limit=Number(res[0]);\n    var upper_limit=Number(res[1]);\n\n    var median_array=[];\n    var i;\n\n    for (i = lower_limit; i <= upper_limit; i=(i+increment)) { \n      median_array.push(i);\n      \n    } \n    console.log(median_array)\n    var median = 0, numsLen = median_array.length;\n    \n    console.log(\"nums length is \"+numsLen)\n    // is even\n    if (numsLen % 2 === 0 ) \n    {\n        console.log(\"even\")\n        // average of two middle numbers\n        \n        median = (median_array[numsLen / 2 - 1] + median_array[numsLen / 2]) / 2;\n    } \n    else { // is odd\n        // middle number only\n        console.log(\"odd\")\n        median = median_array[(numsLen - 1) / 2];\n    }\n    \n    console.log(median)\n    return median;\n  }\n}\n","module.exports = \".first{\\r\\n\\r\\n    position:relative;\\r\\n    \\r\\n}\\r\\n    \\r\\n    \\r\\n.after{\\r\\n    \\r\\n    position:absolute;\\r\\n    \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9iaXdlZWtseS13YXRlci1mb29kL2JvdHRvbS1zaGVldC1vdmVydmlldy1leGFtcGxlLXNoZWV0LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7SUFFSSxrQkFBa0I7O0NBRXJCOzs7QUFHRDs7SUFFSSxrQkFBa0I7O0NBRXJCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9iaXdlZWtseS13YXRlci1mb29kL2JvdHRvbS1zaGVldC1vdmVydmlldy1leGFtcGxlLXNoZWV0LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5maXJzdHtcclxuXHJcbiAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcclxuICAgIFxyXG59XHJcbiAgICBcclxuICAgIFxyXG4uYWZ0ZXJ7XHJcbiAgICBcclxuICAgIHBvc2l0aW9uOmFic29sdXRlO1xyXG4gICAgXHJcbn0iXX0= */\"","module.exports = \"<mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n    <ng-container matColumnDef=\\\"Plant_Species\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Plant Species </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.Plant_Species}} </mat-cell>\\r\\n    </ng-container>\\r\\n  \\r\\n\\r\\n    <ng-container matColumnDef=\\\"Percent_of_Pool\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Percent of Pool </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.Percent_of_Pool}} \\r\\n       <div *ngIf=\\\"element.Plant_Species==='Millet'\\\">\\r\\n            <button mat-flat-button color=\\\"primary\\\" (click)=\\\"calculate_percent('Millet',millet_seedhead_values,millet_plantheight_values,millet_seedheight_values,millet_seeddiameter_values)\\\">Calculate</button>\\r\\n              {{millet_output}}\\r\\n      </div> \\r\\n      <div *ngIf=\\\"element.Plant_Species==='Foxtail'\\\">\\r\\n            <button mat-flat-button color=\\\"primary\\\" (click)=\\\"calculate_percent('Foxtail',foxtail_seedhead_values,NULL,foxtail_seedheight_values,foxtail_seeddiameter_values)\\\">Calculate</button>\\r\\n              {{foxtail_output}}\\r\\n      </div> \\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"Number_of_Seed_Heads\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Number of Seed Heads </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.Number_of_Seed_Heads}} \\r\\n          <div *ngIf=\\\"element.Plant_Species==='Millet'\\\">\\r\\n            <mat-button-toggle-group [(value)] = \\\"millet_seedhead_values\\\" #group=\\\"matButtonToggleGroup\\\" vertical>\\r\\n                    <mat-button-toggle value=\\\"1-6\\\" aria-label=\\\"1\\\">\\r\\n                    1-6\\r\\n                    </mat-button-toggle>\\r\\n                    <mat-button-toggle value=\\\"7-12\\\" aria-label=\\\"2\\\">\\r\\n                      7-12\\r\\n                    </mat-button-toggle>\\r\\n                    <mat-button-toggle value=\\\"13-18\\\" aria-label=\\\"3\\\">\\r\\n                      13-18\\r\\n                    </mat-button-toggle>\\r\\n                    <mat-button-toggle value=\\\"19+\\\" aria-label=\\\"4\\\">\\r\\n                      19+\\r\\n                    </mat-button-toggle>\\r\\n                  </mat-button-toggle-group>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"element.Plant_Species==='Foxtail'\\\">\\r\\n                    <mat-button-toggle-group [(value)] = \\\"foxtail_seedhead_values\\\" #group=\\\"matButtonToggleGroup\\\" vertical>\\r\\n                            <mat-button-toggle value=\\\"1-4\\\" aria-label=\\\"Text align left\\\">\\r\\n                            1-4\\r\\n                            </mat-button-toggle>\\r\\n                            <mat-button-toggle value=\\\"5-8\\\" aria-label=\\\"Text align center\\\">\\r\\n                              5-8\\r\\n                            </mat-button-toggle>\\r\\n                            <mat-button-toggle value=\\\"9-12\\\" aria-label=\\\"Text align right\\\">\\r\\n                              9-12\\r\\n                            </mat-button-toggle>\\r\\n                            <mat-button-toggle value=\\\"13+\\\" aria-label=\\\"Text align justify\\\">\\r\\n                              13+\\r\\n                            </mat-button-toggle>\\r\\n                          </mat-button-toggle-group>\\r\\n                          \\r\\n                    </div>\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n  \\r\\n\\r\\n    <ng-container matColumnDef=\\\"Plant_Height\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Plant Height </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.Plant_Height}} \\r\\n            <div *ngIf=\\\"element.Plant_Species==='Millet'\\\">\\r\\n                    <mat-button-toggle-group [(value)] = \\\"millet_plantheight_values\\\" #group=\\\"matButtonToggleGroup\\\" vertical>\\r\\n                            <mat-button-toggle value=\\\"0.10-0.50\\\" aria-label=\\\"1\\\">\\r\\n                            10-50\\r\\n                            </mat-button-toggle>\\r\\n                            <mat-button-toggle value=\\\"0.60-1.00\\\" aria-label=\\\"2\\\">\\r\\n                            60-100\\r\\n                            </mat-button-toggle>\\r\\n                            <mat-button-toggle value=\\\"1.10-1.50\\\" aria-label=\\\"3\\\">\\r\\n                            110-150\\r\\n                            </mat-button-toggle>\\r\\n                            <mat-button-toggle value=\\\"160+\\\" aria-label=\\\"4\\\">\\r\\n                            160+\\r\\n                            </mat-button-toggle>\\r\\n                    </mat-button-toggle-group>\\r\\n            </div>\\r\\n        </mat-cell> \\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"Seed_Height\\\">\\r\\n        <mat-header-cell *matHeaderCellDef> Seed Height </mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\"> {{element.Seed_Height}}\\r\\n                <div *ngIf=\\\"element.Plant_Species==='Millet'\\\">\\r\\n                        <mat-button-toggle-group [(value)] = \\\"millet_seedheight_values\\\" #group=\\\"matButtonToggleGroup\\\" vertical>\\r\\n                                <mat-button-toggle value=\\\"1-6\\\" aria-label=\\\"1\\\">\\r\\n                                1-6\\r\\n                                </mat-button-toggle>\\r\\n                                <mat-button-toggle value=\\\"7-12\\\" aria-label=\\\"2\\\">\\r\\n                                7-12\\r\\n                                </mat-button-toggle>\\r\\n                                <mat-button-toggle value=\\\"13-18\\\" aria-label=\\\"3\\\">\\r\\n                                13-18\\r\\n                                </mat-button-toggle>\\r\\n                                <mat-button-toggle value=\\\"19+\\\" aria-label=\\\"4\\\">\\r\\n                                19+\\r\\n                                </mat-button-toggle>\\r\\n                              </mat-button-toggle-group>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"element.Plant_Species==='Foxtail'\\\">\\r\\n                        <mat-button-toggle-group [(value)] = \\\"foxtail_seedheight_values\\\" #group=\\\"matButtonToggleGroup\\\" vertical>\\r\\n                                <mat-button-toggle value=\\\"1-3\\\" aria-label=\\\"1\\\">\\r\\n                                1-3\\r\\n                                </mat-button-toggle>\\r\\n                                <mat-button-toggle value=\\\"4-6\\\" aria-label=\\\"2\\\">\\r\\n                                4-6\\r\\n                                </mat-button-toggle>\\r\\n                                <mat-button-toggle value=\\\"7-9\\\" aria-label=\\\"3\\\">\\r\\n                                7-9\\r\\n                                </mat-button-toggle>\\r\\n                                <mat-button-toggle value=\\\"10+\\\" aria-label=\\\"4\\\">\\r\\n                                10+\\r\\n                                </mat-button-toggle>\\r\\n                              </mat-button-toggle-group>\\r\\n                </div>\\r\\n        </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"Seed_Diameter\\\">\\r\\n        <mat-header-cell *matHeaderCellDef> Seed Diameter </mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\"> {{element.Seed_Diameter}} \\r\\n                <div *ngIf=\\\"element.Plant_Species==='Millet'\\\">\\r\\n                        <mat-button-toggle-group [(value)] = \\\"millet_seeddiameter_values\\\" #group=\\\"matButtonToggleGroup\\\" vertical>\\r\\n                                <mat-button-toggle value=\\\"1-4\\\" aria-label=\\\"1\\\">\\r\\n                                1-4\\r\\n                                </mat-button-toggle>\\r\\n                                <mat-button-toggle value=\\\"5-8\\\" aria-label=\\\"2\\\">\\r\\n                                5-8\\r\\n                                </mat-button-toggle>\\r\\n                                <mat-button-toggle value=\\\"9-12\\\" aria-label=\\\"3\\\">\\r\\n                                9-12\\r\\n                                </mat-button-toggle>\\r\\n                                <mat-button-toggle value=\\\"13+\\\" aria-label=\\\"4\\\">\\r\\n                                13+\\r\\n                                </mat-button-toggle>\\r\\n                        </mat-button-toggle-group>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"element.Plant_Species==='Foxtail'\\\">\\r\\n                        <mat-button-toggle-group [(value)] = \\\"foxtail_seeddiameter_values\\\" #group=\\\"matButtonToggleGroup\\\" vertical>\\r\\n                                <mat-button-toggle value=\\\"0-0.6\\\" aria-label=\\\"1\\\">\\r\\n                                0-0.6\\r\\n                                </mat-button-toggle>\\r\\n                                <mat-button-toggle value=\\\"0.7-1.2\\\" aria-label=\\\"2\\\">\\r\\n                                0.7-1.2\\r\\n                                </mat-button-toggle>\\r\\n                                <mat-button-toggle value=\\\"1.3-1.8\\\" aria-label=\\\"3\\\">\\r\\n                                1.3-1.8\\r\\n                                </mat-button-toggle>\\r\\n                                <mat-button-toggle value=\\\"1.9+\\\" aria-label=\\\"4\\\">\\r\\n                                1.9+\\r\\n                                </mat-button-toggle>\\r\\n                              </mat-button-toggle-group>\\r\\n                </div>\\r\\n        </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n    <mat-row *matRowDef=\\\"let row ; columns: displayedColumns;\\\">\\r\\n\\r\\n\\r\\n    </mat-row>\\r\\n    \\r\\n\\r\\n</mat-table>\\r\\n\\r\\n\\r\\n<!-- <mat-button-toggle-group #group=\\\"matButtonToggleGroup\\\" vertical>\\r\\n    <mat-button-toggle value=\\\"1-6\\\" aria-label=\\\"Text align left\\\">\\r\\n    1-6\\r\\n    </mat-button-toggle>\\r\\n    <mat-button-toggle value=\\\"7-12\\\" aria-label=\\\"Text align center\\\">\\r\\n      7-12\\r\\n    </mat-button-toggle>\\r\\n    <mat-button-toggle value=\\\"13-18\\\" aria-label=\\\"Text align right\\\">\\r\\n      13-18\\r\\n    </mat-button-toggle>\\r\\n    <mat-button-toggle value=\\\"19+\\\" aria-label=\\\"Text align justify\\\">\\r\\n      19+\\r\\n    </mat-button-toggle>\\r\\n  </mat-button-toggle-group>\\r\\n<div class=\\\"example-selected-value\\\">Selected value: {{group.value}}</div> -->\\r\\n\"","module.exports = \"table {\\r\\n    width: 100%;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXRhLXJldmlldy9kYXRhLXJldmlldy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtHQUNiIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9kYXRhLXJldmlldy9kYXRhLXJldmlldy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfSJdfQ== */\"","module.exports = \"<h1>Locally Cached Data</h1>\\n\\n<!-- <button mat-raised-button color=\\\"primary\\\" (click)=\\\"getWatermanagement()\\\">View Local Entries</button>\\n -->\\n <mat-form-field>\\n<mat-select placeholder=\\\"Select Table\\\" [(ngModel)]=\\\"table\\\" (ngModelChange)=\\\"fetchData($event)\\\">\\n    <mat-option  *ngFor=\\\"let table of tables\\\" [value]=\\\"table\\\">\\n      {{table}}\\n    </mat-option>\\n</mat-select>\\n</mat-form-field> \\n\\n<!-- html for watermangement table -->\\n<div *ngIf=\\\"this.table==='Water Management'\\\">\\n<table  mat-table [dataSource]=\\\"watermanagements\\\" class=\\\"mat-elevation-z8\\\">\\n  \\n    <ng-container matColumnDef=\\\"date\\\">\\n      <th mat-header-cell *matHeaderCellDef> Date </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.date}} </td>\\n    </ng-container>\\n  \\n    <ng-container matColumnDef=\\\"pool\\\">\\n      <th mat-header-cell *matHeaderCellDef> Pool </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.pool}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"structure\\\">\\n      <th mat-header-cell *matHeaderCellDef> Structure </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.structure}} </td>\\n    </ng-container>\\n  \\n    <ng-container matColumnDef=\\\"elevation\\\">\\n      <th mat-header-cell *matHeaderCellDef> Elevation </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.elevation}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"gate_manipulation\\\">\\n      <th mat-header-cell *matHeaderCellDef> Gate Manipulation </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.gate_manipulation}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"gate_level\\\">\\n      <th mat-header-cell *matHeaderCellDef> Gate Level </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.gate_level}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"stop_change\\\">\\n      <th mat-header-cell *matHeaderCellDef> Stop Change </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.stop_change}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"stop_level\\\">\\n      <th mat-header-cell *matHeaderCellDef> Stop Level </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.stop_level}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"duck_numbers\\\">\\n      <th mat-header-cell *matHeaderCellDef> Duck Numbers </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.duck_numbers}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"goose_numbers\\\">\\n      <th mat-header-cell *matHeaderCellDef> Goose Numbers </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.goose_numbers}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"year\\\">\\n      <th mat-header-cell *matHeaderCellDef> Year </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.year}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"time\\\">\\n      <th mat-header-cell *matHeaderCellDef> Time </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.time}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"fiscal_year\\\">\\n      <th mat-header-cell *matHeaderCellDef> Fiscal Year </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.fiscal_year}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"notes\\\">\\n      <th mat-header-cell *matHeaderCellDef> Notes </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.notes}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"reasons\\\">\\n      <th mat-header-cell *matHeaderCellDef> Reasons </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.reasons}} </td>\\n    </ng-container>\\n  \\n    <tr mat-header-row *matHeaderRowDef=\\\"watermanagement_Columns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: watermanagement_Columns;\\\"></tr> \\n</table>\\n<button mat-raised-button color=\\\"primary\\\" (click)=\\\"addCachedData()\\\">Push Local Data to Cloud</button>\\n</div>\\n\\n<!-- html for watermangement table -->\\n<div *ngIf=\\\"this.table==='Biweekly Water Status and Food Availability'\\\">\\n  <table  mat-table [dataSource]=\\\"watermanagements\\\" class=\\\"mat-elevation-z8\\\">\\n\\n      <ng-container matColumnDef=\\\"buttons\\\">\\n          <th mat-header-cell *matHeaderCellDef> </th>\\n          <td mat-cell *matCellDef=\\\"let entry\\\">   <button mat-raised-button color=\\\"primary\\\" (click)=\\\"deleteEntry(entry.id,'Biweekly Water Status and Food Availability')\\\">Delete</button>\\n        </ng-container>\\n\\n      <ng-container matColumnDef=\\\"month\\\">\\n        <th mat-header-cell *matHeaderCellDef> Month </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.month}} </td>\\n      </ng-container>\\n    \\n      <ng-container matColumnDef=\\\"day\\\">\\n        <th mat-header-cell *matHeaderCellDef> Day </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.day}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"pool\\\">\\n        <th mat-header-cell *matHeaderCellDef> Pool </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.pool}} </td>\\n      </ng-container>\\n    \\n      <ng-container matColumnDef=\\\"percent_of_full_pool\\\">\\n        <th mat-header-cell *matHeaderCellDef> Percent of Full Pools </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.percent_of_full_pools}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"less_than_six\\\">\\n        <th mat-header-cell *matHeaderCellDef> Less than Six Inches </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.less_than_six}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"seven_to_twelve\\\">\\n        <th mat-header-cell *matHeaderCellDef> 7-12 inches </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.seven_to_twelve}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"thirteen_or_more\\\">\\n        <th mat-header-cell *matHeaderCellDef> 13+ </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.thirteen_or_more}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"habitat_standing\\\">\\n        <th mat-header-cell *matHeaderCellDef> Moist Soil Standing </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.habitat_standing}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"habitat_mowed\\\">\\n        <th mat-header-cell *matHeaderCellDef> Moist Soil Mowed </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.habitat_mowed}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"habitat_disced\\\">\\n        <th mat-header-cell *matHeaderCellDef> Moist Soil Disced </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.habitat_disced}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"habitat_unharv_corn\\\">\\n        <th mat-header-cell *matHeaderCellDef> Unharvested Corn </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.habitat_unharv_corn}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"habitat_harv_corn\\\">\\n        <th mat-header-cell *matHeaderCellDef> Harvested Corn </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.habitat_harv_corn}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"habitat_unharv_milo\\\">\\n        <th mat-header-cell *matHeaderCellDef> Unharvested Milo </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.habitat_unharv_milo}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"habitat_harv_milo\\\">\\n        <th mat-header-cell *matHeaderCellDef> Harvested Milo </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.habitat_harv_milo}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"habitat_unharv_beans\\\">\\n        <th mat-header-cell *matHeaderCellDef> Unharvested Beans </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.habitat_unharv_beans}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"habitat_harv_beans\\\">\\n        <th mat-header-cell *matHeaderCellDef> Harvested Beans </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.habitat_harv_beans}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"habitat_browse\\\">\\n        <th mat-header-cell *matHeaderCellDef> Green Browse </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.habitat_browse}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"ice_standing\\\">\\n        <th mat-header-cell *matHeaderCellDef> Moist Soil Standing </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.ice_standing}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"ice_mowed\\\">\\n        <th mat-header-cell *matHeaderCellDef> Moist Soil Mowed </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.ice_mowed}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"ice_disced\\\">\\n        <th mat-header-cell *matHeaderCellDef> Moist Soil Disced </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.ice_disced}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"ice_unharv_corn\\\">\\n        <th mat-header-cell *matHeaderCellDef> Unharvested Corn </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.ice_unharv_corn}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"ice_harv_corn\\\">\\n        <th mat-header-cell *matHeaderCellDef> Harvested Corn </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.ice_harv_corn}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"ice_unharv_milo\\\">\\n        <th mat-header-cell *matHeaderCellDef> Unharvested Milo </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.ice_unharv_milo}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"ice_harv_milo\\\">\\n        <th mat-header-cell *matHeaderCellDef> Harvested Milo </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.ice_harv_milo}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"ice_unharv_beans\\\">\\n        <th mat-header-cell *matHeaderCellDef> Unharvested Beans </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.ice_unharv_beans}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"ice_harv_beans\\\">\\n        <th mat-header-cell *matHeaderCellDef> harvested Beans </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.ice_harv_beans}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"ice_browse\\\">\\n        <th mat-header-cell *matHeaderCellDef> Green Browse </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.ice_browse}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"notes\\\">\\n        <th mat-header-cell *matHeaderCellDef> Notes </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.notes}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"actions\\\">\\n        <th mat-header-cell *matHeaderCellDef> Management Actions </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.actions}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"response\\\">\\n        <th mat-header-cell *matHeaderCellDef> Response to Last </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.response}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"year\\\">\\n        <th mat-header-cell *matHeaderCellDef> Year </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.year}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"time\\\">\\n        <th mat-header-cell *matHeaderCellDef> Time </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.time}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"fiscal_year\\\">\\n        <th mat-header-cell *matHeaderCellDef> Fiscal Year </th>\\n        <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.fiscal_year}} </td>\\n      </ng-container>\\n    \\n      <tr mat-header-row *matHeaderRowDef=\\\"waterfood_Columns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: waterfood_Columns;\\\"></tr> \\n  </table>\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addCachedData()\\\">Push Local Data to Cloud</button>\\n  </div>\\n\\n\\n<!-- html for fall food availability table -->\\n<div *ngIf=\\\"this.table==='Fall Food Availability'\\\">\\n<table  mat-table [dataSource]=\\\"watermanagements\\\" class=\\\"mat-elevation-z8\\\">\\n  \\n    <ng-container matColumnDef=\\\"month\\\">\\n      <th mat-header-cell *matHeaderCellDef> Month </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.month}} </td>\\n    </ng-container>\\n  \\n    <ng-container matColumnDef=\\\"day\\\">\\n      <th mat-header-cell *matHeaderCellDef> Day </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.day}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"year\\\">\\n      <th mat-header-cell *matHeaderCellDef> Year </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.year}} </td>\\n    </ng-container>\\n  \\n    <ng-container matColumnDef=\\\"structure\\\">\\n      <th mat-header-cell *matHeaderCellDef> Structure </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.structure}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"corn_unharv\\\">\\n      <th mat-header-cell *matHeaderCellDef> Corn Unharvested </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.corn_unharv}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"corn_harv\\\">\\n      <th mat-header-cell *matHeaderCellDef> Corn Harvested </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.corn_harv}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"corn_yield\\\">\\n      <th mat-header-cell *matHeaderCellDef> Corn Buschels Per Acre </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.corn_yield}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"corn_yield_field\\\">\\n      <th mat-header-cell *matHeaderCellDef> Corn Buschles (Still in Field) </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.corn_yield_field}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"beans_unharv\\\">\\n      <th mat-header-cell *matHeaderCellDef> Beans Unharvested </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.beans_unharv}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"beans_harv\\\">\\n      <th mat-header-cell *matHeaderCellDef> Beans Harvested </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.stop_level}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"beans_yield\\\">\\n      <th mat-header-cell *matHeaderCellDef> Beans Buschels Per Acre </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.beans_yield}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"beans_yield_field\\\">\\n      <th mat-header-cell *matHeaderCellDef> Beans Buschels (Still in Field) </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.beans_yield_field}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"milo_unharv\\\">\\n      <th mat-header-cell *matHeaderCellDef> Milo Unharvested </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.milo_unharv}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"milo_harv\\\">\\n      <th mat-header-cell *matHeaderCellDef> Milo Harvested </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.milo_harv}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"milo_yield\\\">\\n      <th mat-header-cell *matHeaderCellDef> Milo Buschels Per Acre </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.milo_yield}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"milo_yield_field\\\">\\n      <th mat-header-cell *matHeaderCellDef> Milo Buschels (Still In Field) </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.milo_yield_field}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"wheat_green\\\">\\n      <th mat-header-cell *matHeaderCellDef> Wheat Unharvested </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.wheat_green}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"wheat_harv\\\">\\n      <th mat-header-cell *matHeaderCellDef> Wheat Harvested </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.wheat_harv}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"soil_standing\\\">\\n      <th mat-header-cell *matHeaderCellDef> Soil Standing </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.soil_standing}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"soil_mowed\\\">\\n      <th mat-header-cell *matHeaderCellDef> Soil Mowed </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.soil_mowed}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"soil_disced\\\">\\n      <th mat-header-cell *matHeaderCellDef> Soil Disced </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.soil_disced}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"yield_score\\\">\\n      <th mat-header-cell *matHeaderCellDef> Yield Score </th>\\n      <td mat-cell *matCellDef=\\\"let entry\\\"> {{entry.yield_score}} </td>\\n    </ng-container>\\n  \\n    <tr mat-header-row *matHeaderRowDef=\\\"foodavail_Columns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: foodavail_Columns;\\\"></tr> \\n</table>\\n<button mat-raised-button color=\\\"primary\\\" (click)=\\\"addCachedData()\\\">Push Local Data to Cloud</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport {Globals} from 'src/app/extra/globals';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport {WatermanagementCloudService} from 'src/app/service/watermanagement-cloud.service';\nimport { LocalWaterFood } from 'src/app/service/waterfood-local.service';\nimport { LocalWaterManagementService } from 'src/app/service/watermanagement-local.service';\nimport {FoodAvailLocalService} from 'src/app/service/food-avail-local.service';\n\nimport {\n  Watermanagement,\n  IWatermanagement\n} from 'src/app/model/watermanagement';\nimport { WeatherLocalService } from 'src/app/service/weather-local.service';\n\n\n@Component({\n  selector: 'app-data-review',\n  templateUrl: './data-review.component.html',\n  styleUrls: ['./data-review.component.css']\n})\nexport class DataReviewComponent implements OnInit {\n\n  private localservice_watermanagement: LocalWaterManagementService;\n  private localservice_waterfood:LocalWaterFood;\n  private localservice_foodavail:FoodAvailLocalService;\n  private localservice_weather: WeatherLocalService;\n  private cloudservice: WatermanagementCloudService;\n  watermanagements: any[];\n  newWaterManagement: IWatermanagement = new Watermanagement();\n  local_records: any[];\n  watermanagement_Columns: string[] = ['date','pool','structure','elevation','gate_manipulation','gate_level',\n                                'stop_change','stop_level','duck_numbers','goose_numbers','year','time',\n                              'fiscal_year','notes','reasons'];\n\n  waterfood_Columns: string[] = ['buttons','month','day','pool','percent_of_full_pool','less_than_six','seven_to_twelve',\n  'thirteen_or_more','habitat_standing','habitat_mowed','habitat_disced','habitat_unharv_corn','habitat_harv_corn',\n  'habitat_unharv_milo','habitat_harv_milo','habitat_unharv_beans','habitat_harv_beans','habitat_browse',\n  'ice_standing','ice_mowed','ice_disced','ice_unharv_corn','ice_harv_corn','ice_unharv_milo','ice_harv_milo',\n  'ice_unharv_beans','ice_harv_beans','ice_browse','notes','actions','response','year','time','fiscal_year'];\n\n  foodavail_Columns: string[] = ['month','day','year','structure','corn_unharv','corn_harv','corn_yield',\n  'corn_yield_field','beans_unharv','beans_harv','beans_yield','beans_yield_field','milo_unharv','milo_harv',\n  'milo_yield','milo_yield_field','wheat_green','wheat_harv','soil_standing','soil_mowed','soil_disced',\n  'yield_score'];\n\n  tables: string[]=['Water Management', 'Biweekly Water Status and Food Availability', 'Fall Food Availability'];\n  selected_table:'WaterManagement';\n  selectedValue: string;\n  table=\"\";\n\n   constructor(private localService_WaterManagement: LocalWaterManagementService, \n    private localService_Weather:WeatherLocalService, private localService_WaterFood:LocalWaterFood,\n    private lcoalService_Foodavail:FoodAvailLocalService,\n    private cloudService: WatermanagementCloudService, \n    private globals:Globals,private firebase: AngularFireDatabase) {\n      this.localservice_watermanagement = localService_WaterManagement;\n      this.localservice_waterfood=localService_WaterFood;\n      this.localservice_foodavail=lcoalService_Foodavail;\n      this.localservice_weather=localService_Weather;\n      this.cloudservice= cloudService;\n  }\n\n  ngOnInit() {\n    this.fetchData(this.selected_table);\n  }\n\n  fetchData(selected_table){\n    console.log(\"table is \"+selected_table);\n\n    if (selected_table=='Water Management'){\n      this.getWatermanagement()\n\n    }\n\n    else if (selected_table=='Biweekly Water Status and Food Availability'){\n      this.getWaterfood()\n\n    }\n\n    else if (selected_table=='Fall Food Availability'){\n      this.getFoodavail()\n    }\n\n    else{\n      this.getWeather();\n    }\n\n    this.table=selected_table;\n  }\n\n  deleteEntry(entry_id, selected_table){\n    console.log(\"entry is \"+entry_id);\n\n    if (selected_table=='Water Management'){\n      this.deleteWatermanagement(entry_id)\n\n    }\n\n    else if (selected_table=='Biweekly Water Status and Food Availability'){\n      this.deleteWaterfood(entry_id)\n\n    }\n\n    else if (selected_table=='Fall Food Availability'){\n      this.deleteFoodavail(entry_id)\n    }\n\n    else{\n    }\n  }\n\n  getWatermanagement() {\n    this.localservice_watermanagement.getWaterManagment().\n    then(students => {\n        this.watermanagements = students;\n    }).catch(error => {\n        console.error(error);\n        alert(error.message);\n    });\n    console.log(this.watermanagements);\n  }\n\n  deleteWatermanagement(entry_id) {\n    this.localservice_watermanagement.deleteWaterManagement(entry_id).catch(error => {\n        console.error(error);\n        alert(error.message);\n    });\n    console.log(this.watermanagements);\n    location.reload();\n  }\n\n  getWaterfood() {\n    this.localservice_waterfood.getWaterManagment().\n    then(students => {\n        this.watermanagements = students;\n    }).catch(error => {\n        console.error(error);\n        alert(error.message);\n    });\n    console.log(this.watermanagements);\n  }\n\n  deleteWaterfood(entry_id) {\n    this.localservice_waterfood.deleteWaterManagement(entry_id).catch(error => {\n        console.error(error);\n        alert(error.message);\n    });\n    console.log(this.watermanagements);\n    location.reload();\n  }\n\n  getFoodavail() {\n    this.localservice_foodavail.getWaterManagment().\n    then(students => {\n        this.watermanagements = students;\n    }).catch(error => {\n        console.error(error);\n        alert(error.message);\n    });\n    console.log(this.watermanagements);\n  }\n\n  deleteFoodavail(entry_id) {\n    this.localservice_foodavail.deleteWaterManagement(entry_id).catch(error => {\n        console.error(error);\n        alert(error.message);\n    });\n    location.reload();\n    console.log(this.watermanagements);\n  }\n\n  getWeather() {\n    this.localservice_weather.getWeather().\n    then(students => {\n        this.watermanagements = students;\n    }).catch(error => {\n        console.error(error);\n        alert(error.message);\n    });\n    console.log(this.watermanagements)\n}\n\n  addCachedData(){\n\n    //iterate through every record in IndexDB and write to cloud. then delete\n    //record from IndexDB so it is not duplicated\n/*     this.localService.getWaterManagment().\n    then(local_records => {\n          this.local_records = local_records;\n          //iterate through locally stored records\n          for (let local_entry of this.local_records){\n            //add the record to the cloud\n            this.cloudservice.addWaterManagement(local_entry);\n            //delete the record locally to ensure it is not duplicated\n            //also delete individually to insure no records get deleted without\n            this.localService.deleteWaterManagement(local_entry.id);\n          }\n      }).catch(error => {\n          console.error(error);\n          alert(error.message);\n      }); */\n  }  \n}\n","module.exports = \".wmgmt{\\r\\n    width: 50%;\\r\\n}\\r\\n\\r\\n.small_button {\\r\\n    min-width: 50%;\\r\\n}\\r\\n\\r\\nmat-card {\\r\\n  width: calc(100% - 40px);\\r\\n  height: calc(100% - 40px);\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9mb29kLWF2YWlsL2Zvb2QtYXZhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7Q0FDZDs7QUFFRDtJQUNJLGVBQWU7Q0FDbEI7O0FBRUQ7RUFDRSx5QkFBeUI7RUFDekIsMEJBQTBCO0NBQzNCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9mb29kLWF2YWlsL2Zvb2QtYXZhaWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi53bWdtdHtcclxuICAgIHdpZHRoOiA1MCU7XHJcbn1cclxuXHJcbi5zbWFsbF9idXR0b24ge1xyXG4gICAgbWluLXdpZHRoOiA1MCU7XHJcbn1cclxuXHJcbm1hdC1jYXJkIHtcclxuICB3aWR0aDogY2FsYygxMDAlIC0gNDBweCk7XHJcbiAgaGVpZ2h0OiBjYWxjKDEwMCUgLSA0MHB4KTtcclxufSJdfQ== */\"","module.exports = \"<h1>Fall Food Availability: Acres, Yield, Harvested, Unharvested</h1>\\n<mat-grid-list [cols]=\\\"breakpoint\\\" rowHeight=\\\"1000px\\\" (window:resize)=\\\"onResize($event)\\\">\\n\\n<mat-grid-tile>\\n<mat-card>\\n\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                <div fxFlex=\\\"33%\\\"> \\n                    <mat-form-field class=\\\"wmgmt\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"newFoodAvail.month\\\" [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Month\\\">\\n                    </mat-form-field>\\n                    /\\n                </div> \\n                <div fxFlex=\\\"33%\\\">\\n                    <mat-form-field class=\\\"wmgmt\\\">  \\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"newFoodAvail.day\\\" [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Day\\\">\\n                    </mat-form-field>\\n                </div> \\n                <div fxFlex=\\\"33%\\\">\\n                    <mat-form-field class=\\\"wmgmt\\\">  \\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"newFoodAvail.year\\\" [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Year\\\">\\n                    </mat-form-field>\\n                </div> \\n            </div>\\n        \\n        \\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n            <mat-form-field>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newFoodAvail.structure\\\" [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Structure\\\">\\n            </mat-form-field>\\n            </div>    \\n\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n        <h2 fxFlex=\\\"50%\\\">Corn Acres</h2>\\n\\n        <h2 fxFlex=\\\"50%\\\">Corn Yield</h2>\\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n            <div fxFlex=\\\"50%\\\"> \\n                Unharvested\\n            </div> \\n            <div fxFlex=\\\"50%\\\"> \\n                    Bushels Per Acre\\n            </div> \\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n        <div fxFlex=\\\"50%\\\"> \\n            <mat-form-field class=\\\"wmgmt\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"newFoodAvail.corn_unharv\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"\\\">\\n            </mat-form-field>\\n        </div> \\n        <div  fxFlex=\\\"50%\\\"> \\n                <mat-form-field class=\\\"wmgmt\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"newFoodAvail.corn_yield\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"\\\">\\n                </mat-form-field>\\n        </div> \\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n            <div fxFlex=\\\"50%\\\"> \\n                Harvested\\n            </div> \\n            <div fxFlex=\\\"50%\\\"> \\n                    Bushels Per Acre (Still in Field)\\n            </div> \\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n        <div fxFlex=\\\"50%\\\"> \\n            <mat-form-field class=\\\"wmgmt\\\" font-size=5px;>\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"newFoodAvail.corn_harv\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"\\\">\\n            </mat-form-field>\\n        </div> \\n        <div fxFlex=\\\"50%\\\"> \\n            <mat-form-field class=\\\"wmgmt\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"newFoodAvail.corn_yield_field\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"\\\">\\n            </mat-form-field>\\n        </div> \\n    </div>\\n\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n            <h3 fxFlex=\\\"50%\\\">Bean Acres</h3>\\n    \\n            <h3 fxFlex=\\\"50%\\\">Bean Yield</h3>\\n    </div>\\n\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n            <div fxFlex=\\\"50%\\\"> \\n                Unharvested\\n            </div> \\n            <div fxFlex=\\\"50%\\\"> \\n                    Bushels Per Acre\\n            </div> \\n    </div>\\n\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n            <div fxFlex=\\\"50%\\\"> \\n                <mat-form-field class=\\\"wmgmt\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"newFoodAvail.beans_unharv\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"\\\">\\n                </mat-form-field>\\n            </div> \\n            <div fxFlex=\\\"50%\\\">\\n                    <mat-form-field class=\\\"wmgmt\\\">\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"newFoodAvail.beans_yield\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"\\\">\\n                    </mat-form-field>\\n                </div> \\n        </div>\\n\\n\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                <div fxFlex=\\\"50%\\\"> \\n                    Harvested\\n                </div> \\n                <div fxFlex=\\\"50%\\\"> \\n                        Bushels Per Acre (Still in Field)\\n                </div> \\n        </div>\\n    \\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n            <div fxFlex=\\\"50%\\\"> \\n                <mat-form-field class=\\\"wmgmt\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"newFoodAvail.beans_harv\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"\\\">\\n                </mat-form-field>\\n            </div> \\n            <div fxFlex=\\\"50%\\\"> \\n                <mat-form-field class=\\\"wmgmt\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"newFoodAvail.beans_yield_field\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"\\\">\\n                </mat-form-field>\\n            </div> \\n        </div>\\n\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                <h3 fxFlex=\\\"50%\\\">Milo Acres</h3>\\n        \\n                <h3 fxFlex=\\\"50%\\\">Milo Yield</h3>\\n        </div>\\n\\n\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                <div fxFlex=\\\"50%\\\"> \\n                    Unharvested\\n                </div> \\n                <div fxFlex=\\\"50%\\\"> \\n                        Bushels Per Acre\\n                </div> \\n        </div>\\n    \\n    \\n    \\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                <div fxFlex=\\\"50%\\\"> \\n                    <mat-form-field class=\\\"wmgmt\\\">\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"newFoodAvail.milo_unharv\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"\\\">\\n                    </mat-form-field>\\n                </div> \\n                <div fxFlex=\\\"50%\\\"> \\n                        <mat-form-field class=\\\"wmgmt\\\">\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"newFoodAvail.milo_yield\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"\\\">\\n                        </mat-form-field>\\n                    </div> \\n            </div>\\n\\n\\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                    <div fxFlex=\\\"50%\\\"> \\n                        Harvested\\n                    </div> \\n                    <div fxFlex=\\\"50%\\\"> \\n                            Bushels Per Acre (Still in Field)\\n                    </div> \\n            </div>\\n        \\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                <div fxFlex=\\\"50%\\\"> \\n                    <mat-form-field class=\\\"wmgmt\\\">\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"newFoodAvail.milo_harv\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"\\\">\\n                    </mat-form-field>\\n                </div> \\n                <div fxFlex=\\\"50%\\\"> \\n                    <mat-form-field class=\\\"wmgmt\\\">\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"newFoodAvail.milo_yield_field\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"\\\">\\n                    </mat-form-field>\\n                </div> \\n            </div>\\n        \\n</mat-card>\\n</mat-grid-tile>\\n\\n<mat-grid-tile>\\n        <mat-card>\\n\\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                        <h3 fxFlex=\\\"50%\\\">Wheat Acres</h3>\\n                </div>\\n\\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                        <div fxFlex=\\\"50%\\\"> \\n                            Unharvested\\n                        </div> \\n                </div>\\n            \\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                        <div fxFlex=\\\"50%\\\"> \\n                            <mat-form-field class=\\\"wmgmt\\\">\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"newFoodAvail.wheat_green\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"\\\">\\n                            </mat-form-field>\\n                        </div> \\n                </div>\\n\\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                        <div fxFlex=\\\"50%\\\"> \\n                            Harvested\\n                        </div> \\n                </div>\\n                \\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                    <div fxFlex=\\\"50%\\\"> \\n                        <mat-form-field class=\\\"wmgmt\\\">\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"newFoodAvail.wheat_harv\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"\\\">\\n                        </mat-form-field>\\n                    </div> \\n                </div>\\n                \\n            <h3>Moist Soil Acres</h3>\\n        \\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                <div> \\n                    <mat-form-field class=\\\"wmgmt\\\">\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"newFoodAvail.soil_standing\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Standing\\\">\\n                    </mat-form-field>\\n                </div> \\n            </div>\\n            \\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                <div> \\n                    <mat-form-field class=\\\"wmgmt\\\">\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"newFoodAvail.soil_mowed\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Mowed\\\">\\n                    </mat-form-field>\\n                </div> \\n            </div>\\n\\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                    <div> \\n                        <mat-form-field class=\\\"wmgmt\\\">\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"newFoodAvail.soil_disced\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Disced\\\">\\n                        </mat-form-field>\\n                    </div>  \\n                </div>\\n            \\n            <h3>Moist Soil Yield</h3>\\n\\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                    <div>\\n                    yield on scale of 1-10, 1=lowest and 10=highest\\n                    </div>\\n                </div>            \\n            \\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                <div> \\n                    <mat-form-field class=\\\"wmgmt\\\">\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"newFoodAvail.yield_score\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"\\\">\\n                    </mat-form-field>\\n                </div>  \\n            </div>\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addWaterManagement()\\\">Add to Local Database</button>\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"clearNewWaterManagement()\\\">Clear Fields</button>\\n</mat-card>\\n</mat-grid-tile>\\n\\n\\n\\n     \\n</mat-grid-list>\"","import { Component, OnInit} from '@angular/core';\nimport { FoodAvailLocalService } from 'src/app/service/food-avail-local.service';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport {MediaMatcher} from '@angular/cdk/layout';\nimport {ChangeDetectorRef, OnDestroy} from '@angular/core';\nimport {Globals} from 'src/app/extra/globals';\n\nimport {\n  FoodAvail,\n  IFoodAvail\n} from 'src/app/model/food-avail';\nimport { stringToKeyValue } from '@angular/flex-layout/extended/typings/style/style-transforms';\n\n\n@Component({\n  selector: 'app-food-avail',\n  templateUrl: './food-avail.component.html',\n  styleUrls: ['./food-avail.component.css']\n})\nexport class FoodAvailComponent implements OnInit {\n  breakpoint:number;\n\n  private localservice: FoodAvailLocalService;\n  watermanagements: any[];\n  newFoodAvail: IFoodAvail = new FoodAvail();\n  local_records: any[];\n\n  public previous_records;\n  public second_previous_records;\n\n  public buttonName: any = true;\n  toggleActive:boolean = false;\n\n\n\n  constructor(private localService: FoodAvailLocalService,  private globals:Globals,\n    private firebase: AngularFireDatabase) {\n      this.localservice = localService;\n  }\n\n\n  ngOnInit() {\n    this.getWatermanagement();\n    this.breakpoint = (window.innerWidth <= 768) ? 1 : 2;\n\n    this.localservice.getWaterManagment().\n    then(students => {\n        this.watermanagements = students;\n\n        var listt=this.watermanagements;\n\n/*         console.log(\"list is \"+listt)\n        for (let i = 0; i < listt.length; i++){\n          var second_to_last_entry=last_entry\n          console.log(\"it is \"+listt[i])\n          var last_entry=JSON.parse(JSON.stringify({\"date\":listt[i].date,\"elevation\":listt[i].elevation,\n          \"gate_manipulation\":listt[0].gate_manipulation,\"gate_level\":listt[0].gate_level,\"stoplog_change\":listt[0].stoplog_change,\n          \"stoplog_level\":listt[0].stoplog_level,\"duck_numbers\":listt[i].duck_numbers,\n          \"goose_numbers\":listt[i].goose_numbers,\"notes\":listt[i].notes}));\n          console.log(\"i am \"+listt[i].date)\n        }\n  \n        this.previous_records=last_entry;\n        this.second_previous_records=second_to_last_entry;\n        console.log(\"it is \"+this.previous_records);\n        console.log(\"it is \"+this.second_previous_records); */\n\n\n      }).catch(error => {\n          console.error(error);\n          alert(error.message);\n      });\n\n  }\n\n  onResize(event) {\n    this.breakpoint = (event.target.innerWidth <= 768) ? 1 : 2;\n  }\n\n\n  getWatermanagement() {\n    this.localservice.getWaterManagment().\n    then(students => {\n        this.watermanagements = students;\n\n        var listt=this.watermanagements;\n\n        console.log(\"list is \"+listt)\n        for (let i = 0; i < listt.length; i++){\n          var second_to_last_entry=last_entry\n          console.log(\"it is \"+listt[i])\n          var last_entry=[listt[i].date,listt[i].elevation,listt[i].gate_manipulation,listt[i].gate_level,\n          listt[i].stoplog_change,listt[i].stoplog_level,listt[i].duck_numbers,listt[i].goose_numbers,listt[i].notes]\n          console.log(\"i am \"+listt[i].date)\n        }\n  \n        this.previous_records=last_entry;\n        this.second_previous_records=second_to_last_entry;\n        console.log(\"it is \"+this.previous_records);\n        console.log(\"it is \"+this.second_previous_records);\n      \n    }).catch(error => {\n        console.error(error);\n        alert(error.message);\n    });\n}\n\n  addWaterManagement() {\n\n\n    var status=this.globals.role;\n\n    //if app is offline, write to indexdb\n    if (status==\"offline\"){\n      this.localservice.addWaterManagement(this.newFoodAvail).\n      then((addedWaterManagements: IFoodAvail[]) => {\n      if (addedWaterManagements.length > 0) {\n        this.watermanagements.push(addedWaterManagements[0]);\n        this.clearNewWaterManagement();\n        alert('Successfully added');\n        location.reload();\n      }\n      })\n      .catch(error => {\n      console.error(error);\n      alert(error.message);\n      });\n    }\n\n\n  //if app is online, write to cloud (firestore for the time being)\n  else{\n    //this.cloudservice.addWaterManagement(this.newWaterManagement);    \n  }\n  }\n\n  clearNewWaterManagement() {\n    this.newFoodAvail = new FoodAvail();\n  }\n\n\n}\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n  }\\r\\n  \\r\\n  .example-is-mobile .example-toolbar {\\r\\n    position: fixed;\\r\\n    /* Make sure the toolbar will stay on top of the content as it scrolls past. */\\r\\n    z-index: 2;\\r\\n  }\\r\\n  \\r\\n  h1.example-app-name {\\r\\n    margin-left: 8px;\\r\\n  }\\r\\n  \\r\\n  .example-sidenav-container {\\r\\n    /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This\\r\\n       causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */\\r\\n    flex: 1;\\r\\n  }\\r\\n  \\r\\n  .example-is-mobile .example-sidenav-container {\\r\\n    /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the\\r\\n       `<body>` to be our scrolling element for mobile layouts. */\\r\\n    flex: 1 0 auto;\\r\\n  }\\r\\n  \\r\\n  @media (max-width:767px) {\\r\\n    .example-app-name {font-size: 18px;}\\r\\n\\r\\n  }\\r\\n  \\r\\n  @media (max-width:320px) {\\r\\n    .example-app-name {font-size: 15px;}\\r\\n\\r\\n  }\\r\\n  \\r\\n  @media (min-width:768px) {\\r\\n    .example-app-name {font-size: 20px;}\\r\\n  }\\r\\n\\r\\n  \\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9uYXYtYmFycy9uYXYtYmFycy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztJQUNkLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsT0FBTztJQUNQLFVBQVU7SUFDVixRQUFRO0lBQ1IsU0FBUztHQUNWOztFQUVEO0lBQ0UsZ0JBQWdCO0lBQ2hCLCtFQUErRTtJQUMvRSxXQUFXO0dBQ1o7O0VBRUQ7SUFDRSxpQkFBaUI7R0FDbEI7O0VBRUQ7SUFDRTs2RkFDeUY7SUFDekYsUUFBUTtHQUNUOztFQUVEO0lBQ0U7a0VBQzhEO0lBQzlELGVBQWU7R0FDaEI7O0VBRUQ7SUFDRSxtQkFBbUIsZ0JBQWdCLENBQUM7O0dBRXJDOztFQUVEO0lBQ0UsbUJBQW1CLGdCQUFnQixDQUFDOztHQUVyQzs7RUFFRDtJQUNFLG1CQUFtQixnQkFBZ0IsQ0FBQztHQUNyQyIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2LWJhcnMvbmF2LWJhcnMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuICB9XHJcbiAgXHJcbiAgLmV4YW1wbGUtaXMtbW9iaWxlIC5leGFtcGxlLXRvb2xiYXIge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgLyogTWFrZSBzdXJlIHRoZSB0b29sYmFyIHdpbGwgc3RheSBvbiB0b3Agb2YgdGhlIGNvbnRlbnQgYXMgaXQgc2Nyb2xscyBwYXN0LiAqL1xyXG4gICAgei1pbmRleDogMjtcclxuICB9XHJcbiAgXHJcbiAgaDEuZXhhbXBsZS1hcHAtbmFtZSB7XHJcbiAgICBtYXJnaW4tbGVmdDogOHB4O1xyXG4gIH1cclxuICBcclxuICAuZXhhbXBsZS1zaWRlbmF2LWNvbnRhaW5lciB7XHJcbiAgICAvKiBXaGVuIHRoZSBzaWRlbmF2IGlzIG5vdCBmaXhlZCwgc3RyZXRjaCB0aGUgc2lkZW5hdiBjb250YWluZXIgdG8gZmlsbCB0aGUgYXZhaWxhYmxlIHNwYWNlLiBUaGlzXHJcbiAgICAgICBjYXVzZXMgYDxtYXQtc2lkZW5hdi1jb250ZW50PmAgdG8gYWN0IGFzIG91ciBzY3JvbGxpbmcgZWxlbWVudCBmb3IgZGVza3RvcCBsYXlvdXRzLiAqL1xyXG4gICAgZmxleDogMTtcclxuICB9XHJcbiAgXHJcbiAgLmV4YW1wbGUtaXMtbW9iaWxlIC5leGFtcGxlLXNpZGVuYXYtY29udGFpbmVyIHtcclxuICAgIC8qIFdoZW4gdGhlIHNpZGVuYXYgaXMgZml4ZWQsIGRvbid0IGNvbnN0cmFpbiB0aGUgaGVpZ2h0IG9mIHRoZSBzaWRlbmF2IGNvbnRhaW5lci4gVGhpcyBhbGxvd3MgdGhlXHJcbiAgICAgICBgPGJvZHk+YCB0byBiZSBvdXIgc2Nyb2xsaW5nIGVsZW1lbnQgZm9yIG1vYmlsZSBsYXlvdXRzLiAqL1xyXG4gICAgZmxleDogMSAwIGF1dG87XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgKG1heC13aWR0aDo3NjdweCkge1xyXG4gICAgLmV4YW1wbGUtYXBwLW5hbWUge2ZvbnQtc2l6ZTogMThweDt9XHJcblxyXG4gIH1cclxuXHJcbiAgQG1lZGlhIChtYXgtd2lkdGg6MzIwcHgpIHtcclxuICAgIC5leGFtcGxlLWFwcC1uYW1lIHtmb250LXNpemU6IDE1cHg7fVxyXG5cclxuICB9XHJcblxyXG4gIEBtZWRpYSAobWluLXdpZHRoOjc2OHB4KSB7XHJcbiAgICAuZXhhbXBsZS1hcHAtbmFtZSB7Zm9udC1zaXplOiAyMHB4O31cclxuICB9XHJcblxyXG4gIFxyXG5cclxuXHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"example-container\\\">\\n  <mat-toolbar color=\\\"primary\\\" class=\\\"example-toolbar\\\">\\n      <button mat-icon-button (click)=\\\"snav.toggle()\\\"><mat-icon>menu</mat-icon></button>\\n      <h1 class=\\\"example-app-name\\\">Wetland Waterfowl Data Management</h1>\\n    </mat-toolbar>\\n\\n<mat-sidenav-container class=\\\"example-sidenav-container\\\" [style.marginTop.px]=\\\"mobileQuery.matches ? 56 : 0\\\">\\n    <mat-sidenav #snav [mode]=\\\"mobileQuery.matches ? 'over' : 'side'\\\"\\n                 [fixedInViewport]=\\\"mobileQuery.matches\\\" fixedTopGap=\\\"56\\\">\\n    <mat-nav-list>\\n         <nav>\\n            <div class=\\\"container\\\" fxLayout=\\\"column\\\">\\n                <div fxFlex=\\\"14%\\\">\\n                    <a mat-raised-button routerLink=\\\"/watermanagement\\\" color=\\\"primary\\\" (click)=\\\"snav.toggle()\\\">Daily Water Management</a>\\n                </div>\\n                <div fxFlex=\\\"14%\\\">\\n                    <a mat-raised-button color=\\\"primary\\\" id=\\\"wm_Button\\\" routerLink=\\\"/waterfood\\\" (click)=\\\"snav.toggle()\\\">Biweekly Water/Food Status</a>\\n                </div>\\n                <div fxFlex=\\\"20%\\\">\\n                    <a mat-raised-button color=\\\"primary\\\" id=\\\"dr_button\\\" routerLink=\\\"/fallfood\\\" (click)=\\\"snav.toggle()\\\">Food Available Start of Season</a>\\n                </div>\\n                <div fxFlex=\\\"14%\\\">\\n                    <a mat-raised-button color=\\\"primary\\\" id=\\\"dr_button\\\" routerLink=\\\"/datareview\\\" (click)=\\\"snav.toggle()\\\">View Locally Stored Data</a>\\n                </div>\\n                <div fxFlex=\\\"14%\\\">\\n                    <a mat-raised-button color=\\\"primary\\\" id=\\\"dr_button\\\" routerLink=\\\"/pumpmanagement\\\" (click)=\\\"snav.toggle()\\\">Pump Management</a>\\n                </div>\\n                <div fxFlex=\\\"14%\\\">\\n                  <a mat-raised-button color=\\\"primary\\\" id=\\\"dr_button\\\" routerLink=\\\"/pumptable\\\" (click)=\\\"snav.toggle()\\\">Pump </a>\\n                </div>\\n                <div fxFlex=\\\"14%\\\">\\n                    <a mat-raised-button color=\\\"primary\\\" id=\\\"dr_button\\\" routerLink=\\\"/weather\\\" (click)=\\\"snav.toggle()\\\">Daily Weather Observations</a>\\n                </div>\\n\\n              </div>\\n          </nav> \\n    </mat-nav-list>\\n</mat-sidenav>\\n\\n<mat-sidenav-content>\\n    <router-outlet></router-outlet>\\n</mat-sidenav-content>\\n</mat-sidenav-container>\\n</div>\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {MediaChange, MediaObserver} from '@angular/flex-layout';\n\nimport {MediaMatcher} from '@angular/cdk/layout';\nimport {ChangeDetectorRef, OnDestroy} from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bars',\n  templateUrl: './nav-bars.component.html',\n  styleUrls: ['./nav-bars.component.css']\n})\nexport class NavBarsComponent implements OnInit {\n\n  mobileQuery: MediaQueryList;\n\n  private _mobileQueryListener: () => void;\n\n  constructor(changeDetectorRef: ChangeDetectorRef, media: MediaMatcher) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }  \n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n  \n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHVtcC1tYW5hZ2VtZW50L3B1bXAtbWFuYWdlbWVudC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  pump-management works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pump-management',\n  templateUrl: './pump-management.component.html',\n  styleUrls: ['./pump-management.component.css']\n})\nexport class PumpManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHVtcC10YWJsZS9wdW1wLXRhYmxlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  pump-table works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pump-table',\n  templateUrl: './pump-table.component.html',\n  styleUrls: ['./pump-table.component.css']\n})\nexport class PumpTableComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".wmgmt{\\r\\n    width: 80%;\\r\\n}\\r\\n\\r\\n.prev{\\r\\n  width:40%;\\r\\n}\\r\\n\\r\\n.notes{\\r\\n  width:100%;\\r\\n}\\r\\n\\r\\n.small_button {\\r\\n    min-width: 50%;\\r\\n}\\r\\n\\r\\nmat-card {\\r\\n  width: calc(100% - 40px);\\r\\n  height: calc(100% - 40px);\\r\\n}\\r\\n\\r\\n.previous{\\r\\n  font-size: 12px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy93YXRlcm1hbmFnZW1lbnQvd2F0ZXJtYW5hZ2VtZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0NBQ2Q7O0FBRUQ7RUFDRSxVQUFVO0NBQ1g7O0FBRUQ7RUFDRSxXQUFXO0NBQ1o7O0FBQ0Q7SUFDSSxlQUFlO0NBQ2xCOztBQUVEO0VBQ0UseUJBQXlCO0VBQ3pCLDBCQUEwQjtDQUMzQjs7QUFFRDtFQUNFLGdCQUFnQjtDQUNqQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvd2F0ZXJtYW5hZ2VtZW50L3dhdGVybWFuYWdlbWVudC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLndtZ210e1xyXG4gICAgd2lkdGg6IDgwJTtcclxufVxyXG5cclxuLnByZXZ7XHJcbiAgd2lkdGg6NDAlO1xyXG59XHJcblxyXG4ubm90ZXN7XHJcbiAgd2lkdGg6MTAwJTtcclxufVxyXG4uc21hbGxfYnV0dG9uIHtcclxuICAgIG1pbi13aWR0aDogNTAlO1xyXG59XHJcblxyXG5tYXQtY2FyZCB7XHJcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDQwcHgpO1xyXG4gIGhlaWdodDogY2FsYygxMDAlIC0gNDBweCk7XHJcbn1cclxuXHJcbi5wcmV2aW91c3tcclxuICBmb250LXNpemU6IDEycHg7XHJcbn1cclxuIl19 */\"","module.exports = \"  <h1>Water Management</h1>\\n  <mat-grid-list [cols]=\\\"breakpoint\\\" rowHeight=\\\"900px\\\" (window:resize)=\\\"onResize($event)\\\">\\n  <mat-grid-tile>\\n  <mat-card class=\\\"example-container\\\">\\n  <div fxLayout=\\\"row\\\"  fxLayoutGap=\\\"0.5%\\\">\\n        <div fxFlex=\\\"50%\\\"> \\n        </div> \\n        <div class=\\\"previous\\\" fxFlex=\\\"40%\\\"> \\n            Previous Entry\\n        </div> \\n  </div>\\n  <div fxLayout=\\\"row\\\"  fxLayoutGap=\\\"0.5%\\\">\\n      <div fxFlex=\\\"50%\\\"> \\n          <mat-form-field class=\\\"wmgmt\\\" style=\\\"font-size: 15px\\\">\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterManagement.date\\\" [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Month/Day\\\">\\n          </mat-form-field>\\n      </div> \\n      <div fxFlex=\\\"40%\\\"> \\n          <mat-form-field class=\\\"prev\\\" *ngIf=\\\"this.previous_records\\\">  \\n          <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.date\\\" [disabled]='true' matInput placeholder=\\\"\\\">\\n          </mat-form-field>\\n      </div> \\n  </div>\\n  \\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n    <div fxFlex=\\\"50%\\\">\\n        <mat-form-field>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterManagement.pool\\\" [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Pool\\\">\\n        </mat-form-field>\\n    </div>\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\" >\\n      <div fxFlex=\\\"50%\\\">\\n        <mat-form-field>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterManagement.structure\\\" [ngModelOptions]=\\\"{standalone:true}\\\"  matInput placeholder=\\\"Structure\\\">\\n        </mat-form-field>\\n      </div>\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\"  fxLayoutGap=\\\"0.5%\\\">\\n        <div fxFlex=\\\"50%\\\"> \\n        </div> \\n        <div class=\\\"previous\\\" fxFlex=\\\"40%\\\"> \\n            Previous Entry\\n        </div> \\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n      <div fxFlex=\\\"50%\\\">\\n          <mat-form-field class=\\\"wmgmt\\\">\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterManagement.elevation\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Elevation\\\">\\n          </mat-form-field>\\n      </div> \\n      <div fxFlex=\\\"25%\\\"> \\n          <mat-form-field class=\\\"prev\\\" *ngIf=\\\"this.previous_records\\\" > \\n              <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.elevation\\\" [disabled]='true' matInput placeholder=\\\"\\\">\\n          </mat-form-field>\\n      </div> \\n      <div fxFlex=\\\"5%\\\">\\n          \\n        <button  mat-mini-fab color=\\\"primary\\\" [class.active]=\\\"toggleActive\\\" (click)=\\\"updateChart('elevation')\\\"> Plot </button>\\n      </div>\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n      <div fxFlex=\\\"50%\\\"> \\n          <mat-form-field class=\\\"wmgmt\\\"  width=\\\"75%\\\">\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterManagement.gate_manipulation\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Gate Manipulation\\\">\\n          </mat-form-field>\\n      </div> \\n      <div fxFlex=\\\"25%\\\">\\n          <mat-form-field class=\\\"prev\\\" *ngIf=\\\"this.previous_records\\\"> \\n              <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.gate_manipulation\\\" [disabled]='true' matInput placeholder=\\\"\\\">\\n          </mat-form-field>\\n      </div> \\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n      <div fxFlex=\\\"50%\\\"> \\n          <mat-form-field class=\\\"wmgmt\\\">\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterManagement.gate_level\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Gate Level\\\">\\n          </mat-form-field>\\n      </div> \\n      <div fxFlex=\\\"25%\\\">\\n          <mat-form-field class=\\\"prev\\\" *ngIf=\\\"this.previous_records\\\"> \\n              <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.gate_level\\\" [disabled]='true' matInput placeholder=\\\"\\\">\\n          </mat-form-field>\\n        </div> \\n        <div fxFlex=\\\"5%\\\">\\n            <button  mat-mini-fab color=\\\"primary\\\" [class.active]=\\\"toggleActive\\\" (click)=\\\"updateChart('gate_level')\\\">Plot </button>\\n        </div>\\n    </div>\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n      <div fxFlex=\\\"50%\\\"> \\n          <mat-form-field class=\\\"wmgmt\\\">\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterManagement.stoplog_change\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Stoplog Change\\\">\\n          </mat-form-field>\\n      </div> \\n      <div fxFlex=\\\"25%\\\">\\n          <mat-form-field class=\\\"prev\\\" *ngIf=\\\"this.previous_records\\\" > \\n              <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.stoplog_change\\\" [disabled]='true' matInput placeholder=\\\"\\\">\\n          </mat-form-field>\\n      </div> \\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n      <div fxFlex=\\\"50%\\\"> \\n          <mat-form-field class=\\\"wmgmt\\\">\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterManagement.stoplog_level\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Stoplog Level\\\">\\n          </mat-form-field>\\n      </div> \\n      <div fxFlex=\\\"25%\\\">\\n          <mat-form-field class=\\\"prev\\\" *ngIf=\\\"this.previous_records\\\" > \\n              <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.stoplog_level\\\" [disabled]='true'  matInput placeholder=\\\"\\\">\\n          </mat-form-field>\\n      </div> \\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n      <div fxFlex=\\\"50%\\\"> \\n              <mat-form-field class=\\\"wmgmt\\\">\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterManagement.duck_numbers\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Duck Numbers\\\">\\n                </mat-form-field>   \\n      </div> \\n      <div fxFlex=\\\"25%\\\">\\n          <mat-form-field class=\\\"prev\\\" *ngIf=\\\"this.previous_records\\\"> \\n              <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.duck_numbers\\\" [disabled]='true' matInput placeholder=\\\"\\\">\\n          </mat-form-field>\\n      </div> \\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n      <div fxFlex=\\\"50%\\\"> \\n              <mat-form-field class=\\\"wmgmt\\\">\\n                  <input type=\\\"text\\\"  [(ngModel)]=\\\"newWaterManagement.goose_numbers\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Goose Numbers\\\">\\n                </mat-form-field>   \\n      </div> \\n      <div fxFlex=\\\"25%\\\">\\n          <mat-form-field class=\\\"prev\\\" *ngIf=\\\"this.previous_records\\\"> \\n              <input type=\\\"text\\\" [(ngModel)]=\\\"this.previous_records.goose_numbers\\\" [disabled]='true' matInput placeholder=\\\"\\\">\\n          </mat-form-field>\\n          \\n      </div> \\n      <div fxFlex=\\\"5%\\\">\\n        <button  mat-mini-fab color=\\\"primary\\\" [class.active]=\\\"toggleActive\\\" (click)=\\\"updateChart('bird_nums')\\\">Plot </button>\\n      </div>\\n  </div>\\n\\n  <mat-sidenav #rightSidenav mode=\\\"side\\\"  class=\\\"rightSidenav\\\"\\n  [fixedInViewport]=\\\"true\\\" [fixedTopGap]=\\\"250\\\">\\n    <p>{{Graph_Title}}</p>\\n\\n<!--     <div *ngIf=\\\"chart\\\">\\n    <canvas id=\\\"canvas\\\">{{ chart }}</canvas>\\n    </div>  -->\\n  </mat-sidenav>\\n  \\n  \\n</mat-card>\\n</mat-grid-tile>\\n\\n<mat-grid-tile>\\n<mat-card>\\n        <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"0.5%\\\">\\n            <div fxFlex=\\\"5%\\\" *ngIf=\\\"chart\\\">\\n              <p>Water Elevation</p>\\n              <canvas id=\\\"canvas_elevation\\\" >{{ chart }}</canvas>\\n            </div>\\n\\n        <div fxFlex=\\\"5%\\\" *ngIf=\\\"chart\\\">\\n                <p>Gate Level</p>\\n                <canvas id=\\\"canvas_gate_level\\\" >{{ chart }}</canvas>\\n          </div>\\n\\n          <div fxFlex=\\\"5%\\\" *ngIf=\\\"chart\\\">\\n                <p>Number of Ducks and Geese</p>\\n                <canvas id=\\\"canvas_birds\\\" >{{ chart }}</canvas>\\n          </div>\\n        </div>\\n</mat-card>\\n</mat-grid-tile>\\n\\n<mat-grid-tile>\\n    <mat-card>\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                <div fxFlex=\\\"100%\\\"> \\n                    <mat-form-field class=\\\"notes\\\">\\n                    <textarea [(ngModel)]=\\\"newWaterManagement.notes\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Notes\\\" rows=\\\"10\\\" cols=\\\"40\\\"></textarea>\\n                  </mat-form-field>\\n                </div> \\n            </div>\\n\\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                    <div fxFlex=\\\"100%\\\"> \\n                        <mat-form-field *ngIf=\\\"this.previous_records\\\" class=\\\"notes\\\">\\n                            <textarea [(ngModel)]=\\\"this.previous_records.notes\\\" [disabled]='true' matInput placeholder=\\\"Previous Notes\\\" rows=10></textarea>\\n                      </mat-form-field>\\n                    </div> \\n            </div>\\n          \\n            <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"0.5%\\\">\\n                  <div fxFlex=\\\"100%\\\"> \\n                      <mat-form-field class=\\\"notes\\\">\\n                      <textarea [(ngModel)]=\\\"newWaterManagement.reasons\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Reason for Mangement Action\\\" rows=10></textarea>\\n                    </mat-form-field>\\n                  </div> \\n              </div>\\n              <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addWaterManagement()\\\">Add to Local Database</button>\\n              <button mat-raised-button color=\\\"primary\\\" (click)=\\\"clearNewWaterManagement()\\\">Clear Fields</button>\\n        </mat-card>\\n</mat-grid-tile>       \\n\\n\\n</mat-grid-list>\"","import { Component, OnInit, ViewChild,VERSION } from '@angular/core';\nimport { LocalWaterManagementService } from 'src/app/service/watermanagement-local.service';\nimport {Globals} from 'src/app/extra/globals';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport {WatermanagementCloudService} from 'src/app/service/watermanagement-cloud.service';\nimport {MediaMatcher} from '@angular/cdk/layout';\nimport {ChangeDetectorRef, OnDestroy} from '@angular/core';\nimport {ChartService} from 'src/app/service/chart.service';\nimport { MatSidenav } from '@angular/material';\nimport { Chart } from 'chart.js';\n\n\nimport {\n  Watermanagement,\n  IWatermanagement\n} from 'src/app/model/watermanagement';\nimport { stringToKeyValue } from '@angular/flex-layout/extended/typings/style/style-transforms';\n\n@Component({\n  selector: 'app-watermanagement',\n  templateUrl: './watermanagement.component.html',\n  styleUrls: ['./watermanagement.component.css'],\n  providers:[LocalWaterManagementService,ChartService]\n})\nexport class WatermanagementComponent implements OnInit {\n  \n  @ViewChild('rightSidenav') public sidenav: MatSidenav;\n  ngVersion: string = VERSION.full;\n  matVersion: string = '5.1.0'\n  breakpoint:number;\n  private localservice: LocalWaterManagementService;\n  private cloudservice: WatermanagementCloudService;\n  watermanagements: any[];\n  newWaterManagement: IWatermanagement = new Watermanagement();\n  local_records: any[];\n\n  public previous_records;\n  public second_previous_records;\n\n  public buttonName: any = true;\n  toggleActive:boolean = false;\n\n  chart_loaded=false;\n\n  chart = [];\n  dates = [];\n  elevation_data=[];\n  gate_level_data=[];\n  ducks_num_data=[];\n  geese_num_data=[];\n  Graph_Title;\n\n   constructor(private localService: LocalWaterManagementService, private cloudService: WatermanagementCloudService, private globals:Globals,\n    private firebase: AngularFireDatabase, private sidenavService:ChartService) {\n      this.localservice = localService;\n      this.cloudservice= cloudService;\n  }\n\n  ngOnInit() : void {\n    this.sidenavService.setSidenav(this.sidenav);\n    this.getWatermanagement();\n    this.breakpoint = (window.innerWidth <= 768) ? 1 : 3;\n    console.log(\"1 side nave is \"+this.sidenav)\n\n    this.sidenavService.setSidenav(this.sidenav);\n    console.log(\"5 this sidnave is\"+this.sidenav)\n    this.localservice.getWaterManagment().\n    then(students => {\n        this.watermanagements = students;\n\n        var listt=this.watermanagements;\n\n        console.log(\"list is \"+listt)\n         \n        for (let i = 0; i < listt.length; i++){\n          var second_to_last_entry=last_entry\n          console.log(\"it is \"+listt[i])\n          var last_entry=JSON.parse(JSON.stringify({\"date\":listt[i].date,\"elevation\":listt[i].elevation,\n          \"gate_manipulation\":listt[0].gate_manipulation,\"gate_level\":listt[0].gate_level,\"stoplog_change\":listt[0].stoplog_change,\n          \"stoplog_level\":listt[0].stoplog_level,\"duck_numbers\":listt[i].duck_numbers,\n          \"goose_numbers\":listt[i].goose_numbers,\"notes\":listt[i].notes}));\n          console.log(\"i am \"+listt[i].date)\n        }\n  \n        this.previous_records=last_entry;\n        this.second_previous_records=second_to_last_entry;\n        console.log(\"it is \"+this.previous_records);\n        console.log(\"it is \"+this.second_previous_records); \n\n        this.makeChart();\n\n      }).catch(error => {\n          console.error(error);\n          alert(error.message);\n      });\n  } \n\n  make_elevation_chart(){\n\n    console.log(\"in here\")\n    this.dates=[this.second_previous_records.date,this.previous_records.date,this.newWaterManagement.date]\n    this.elevation_data=[this.second_previous_records.elevation,this.previous_records.elevation,this.newWaterManagement.elevation]\n    this.Graph_Title=\"Water Elevation\";\n    \n    this.chart = new Chart('canvas_elevation', {\n      type: 'line',\n      data: {\n        labels: this.dates,\n        datasets: [\n          {\n            data: this.elevation_data,\n            borderColor: '#3cba9f',\n            fill: false\n          },\n        ]\n      },\n      options: {\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            display: true\n          }],\n          yAxes: [{\n            display: true\n          }]\n        }\n      }\n    })\n\n    return true;\n  }\n\n  makeChart(){\n    this.dates=[this.second_previous_records.date,this.previous_records.date,\"Current Entry\"]\n    this.elevation_data=[this.second_previous_records.elevation,this.previous_records.elevation,this.newWaterManagement.elevation]\n    this.gate_level_data=[this.second_previous_records.gate_level,this.previous_records.gate_level,this.newWaterManagement.gate_level]\n    this.ducks_num_data=[this.second_previous_records.duck_numbers,this.previous_records.duck_numbers,this.newWaterManagement.duck_numbers]\n    this.geese_num_data=[this.second_previous_records.goose_numbers,this.previous_records.goose_numbers,this.newWaterManagement.goose_numbers]\n\n    this.Graph_Title=\"Water Elevation\";\n    \n     this.chart = new Chart('canvas_elevation', {\n      type: 'line',\n      data: {\n        labels: this.dates,\n        datasets: [\n          {\n            data: this.elevation_data,\n            borderColor: '#3cba9f',\n            fill: false\n          },\n        ]\n      },\n      options: {\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            display: true\n          }],\n          yAxes: [{\n            display: true\n          }]\n        }\n      }\n    }) \n\n    this.Graph_Title=\"Gate Level\";\n    \n    this.chart = new Chart('canvas_gate_level', {\n      type: 'line',\n      data: {\n        labels: this.dates,\n        datasets: [\n          {\n            data: this.gate_level_data,\n            borderColor: '#3cba9f',\n            fill: false\n          },\n        ]\n      },\n      options: {\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            display: true\n          }],\n          yAxes: [{\n            display: true\n          }]\n        }\n      }\n    })  \n\n    this.Graph_Title=\"Number of Ducks and Geese\";\n    \n    this.chart = new Chart('canvas_birds', {\n      type: 'line',\n      data: {\n        labels: this.dates,\n        datasets: [\n          {\n            label:\"Geese\",\n            data: this.geese_num_data,\n            borderColor: 'red',\n            fill: false\n          },\n          {\n            label:\"Ducks\",\n            data: this.ducks_num_data,\n            borderColor: '#3cba9f',\n            fill: false\n          },\n        ]\n      },\n      options: {\n        legend: {\n          display: true\n        },\n        scales: {\n          xAxes: [{\n            display: true\n          }],\n          yAxes: [{\n            display: true\n          }]\n        }\n      }\n    })\n    return \"done\";  \n  }\n\n  updateChart(chart_name){\n    this.dates=[this.second_previous_records.date,this.previous_records.date,\"Current Entry\"]\n    this.elevation_data=[this.second_previous_records.elevation,this.previous_records.elevation,this.newWaterManagement.elevation]\n    this.gate_level_data=[this.second_previous_records.gate_level,this.previous_records.gate_level,this.newWaterManagement.gate_level]\n    this.ducks_num_data=[this.second_previous_records.duck_numbers,this.previous_records.duck_numbers,this.newWaterManagement.duck_numbers]\n    this.geese_num_data=[this.second_previous_records.goose_numbers,this.previous_records.goose_numbers,this.newWaterManagement.goose_numbers]\n\n\n\n    if (chart_name==\"elevation\"){\n      var data_for_Chart=this.elevation_data;\n      var chart_type ='canvas_elevation';\n    }\n\n    else if (chart_name==\"gate_level\"){\n      var data_for_Chart=this.gate_level_data;\n      var chart_type ='canvas_gate_level';\n    }\n\n    else if (chart_name==\"bird_nums\"){\n     var chart_type ='canvas_birds';\n    }\n    \n    if (chart_name==\"elevation\"||chart_name==\"gate_level\"){\n    this.chart = new Chart(chart_type, {\n      type: 'line',\n      data: {\n        labels: this.dates,\n        datasets: [\n          {\n            data: data_for_Chart,\n            borderColor: '#3cba9f',\n            fill: false\n          },\n        ]\n      },\n      options: {\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            display: true\n          }],\n          yAxes: [{\n            display: true\n          }]\n        }\n      }\n    })\n  }\n\n  else{\n    this.chart = new Chart(chart_type, {\n      type: 'line',\n      data: {\n        labels: this.dates,\n        datasets: [\n          {\n            label:\"Geese\",\n            data: this.geese_num_data,\n            borderColor: 'red',\n            fill: false\n          },\n          {\n            label:\"Ducks\",\n            data: this.ducks_num_data,\n            borderColor: '#3cba9f',\n            fill: false\n          },\n        ]\n      },\n      options: {\n        legend: {\n          display: true\n        },\n        scales: {\n          xAxes: [{\n            display: true\n          }],\n          yAxes: [{\n            display: true\n          }]\n        }\n      }\n    })    \n  }\n  }\n\n/*   makeChart(chart_name){\n\n    console.log(\"make_ahrt\")\n\n    if (!this.second_previous_records){\n        this.second_previous_records=[]\n        console.log(\"we did it\")\n    }\n\n    this.dates=[this.second_previous_records.date,this.previous_records.date,this.newWaterManagement.date]\n    this.elevation_data=[this.second_previous_records.elevation,this.previous_records.elevation,this.newWaterManagement.elevation]\n    this.gate_level_data=[this.second_previous_records.gate_level,this.previous_records.gate_level,this.newWaterManagement.gate_level]\n    this.ducks_num_data=[this.second_previous_records.duck_numbers,this.previous_records.duck_numbers,this.newWaterManagement.duck_numbers]\n    this.geese_num_data=[this.second_previous_records.goose_numbers,this.previous_records.goose_numbers,this.newWaterManagement.goose_numbers]\n\n    var data_for_Chart=[];\n\n    if (chart_name==\"elevation\"){\n      console.log(\"in elevation\")\n      data_for_Chart=this.elevation_data;\n      this.Graph_Title=\"Water Elevation\";\n    }\n\n    else if (chart_name==\"gate_level\"){\n      data_for_Chart=this.gate_level_data;\n      this.Graph_Title=\"Gate Level\";\n    }\n\n    else if (chart_name==\"bird_nums\"){\n      data_for_Chart=this.geese_num_data;\n      this.Graph_Title=\"Number of Ducks and Geese\";\n    }\n    \n    if (chart_name==\"elevation\"||chart_name==\"gate_level\"){\n    console.log(\"data for chart it \"+data_for_Chart)\n    this.chart = new Chart('canvas', {\n      type: 'line',\n      data: {\n        labels: this.dates,\n        datasets: [\n          {\n            data: data_for_Chart,\n            borderColor: '#3cba9f',\n            fill: false\n          },\n        ]\n      },\n      options: {\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            display: true\n          }],\n          yAxes: [{\n            display: true\n          }]\n        }\n      }\n    })\n\n    this.chart_loaded=true;\n    console.log(\"chart is \"+this.chart)\n    console.log(\"chart loaded is \"+this.chart_loaded)\n    return \"done\"; \n  }\n\n  else{\n    this.chart = new Chart('canvas', {\n      type: 'line',\n      data: {\n        labels: this.dates,\n        datasets: [\n          {\n            label:\"Geese\",\n            data: this.geese_num_data,\n            borderColor: 'red',\n            fill: false\n          },\n          {\n            label:\"Ducks\",\n            data: this.ducks_num_data,\n            borderColor: '#3cba9f',\n            fill: false\n          },\n        ]\n      },\n      options: {\n        legend: {\n          display: true\n        },\n        scales: {\n          xAxes: [{\n            display: true\n          }],\n          yAxes: [{\n            display: true\n          }]\n        }\n      }\n    })\n    return \"done\";     \n  } \n\n}*/\n\n\ttoggleRightSidenav(chart_name) {\n    this.toggleActive = !this.toggleActive;\n    console.log(\"2 side nave is \"+this.sidenav)\n\n    //call a render chart function, then toggel sidenav\n    //this.makeChart(chart_name);\n    this.sidenav.toggle();\n    console.log('Clicked');\n\t}\n\n  getWatermanagement() {\n      this.localservice.getWaterManagment().\n      then(students => {\n          this.watermanagements = students;\n\n          var listt=this.watermanagements;\n\n          console.log(\"list is \"+listt)\n          for (let i = 0; i < listt.length; i++){\n            var second_to_last_entry=last_entry\n            console.log(\"it is \"+listt[i])\n            var last_entry=[listt[i].date,listt[i].elevation,listt[i].gate_manipulation,listt[i].gate_level,\n            listt[i].stoplog_change,listt[i].stoplog_level,listt[i].duck_numbers,listt[i].goose_numbers,listt[i].notes]\n            console.log(\"i am \"+listt[i].date)\n          }\n    \n          this.previous_records=last_entry;\n          this.second_previous_records=second_to_last_entry;\n          console.log(\"it is \"+this.previous_records);\n          console.log(\"it is \"+this.second_previous_records);\n        \n         \n\n      }).catch(error => {\n          console.error(error);\n          alert(error.message);\n      });\n  }\n\n  addWaterManagement() {\n    alert(\"online stat is \"+this.globals.role);\n    console.log(this.newWaterManagement.duck_numbers);\n\n    var status=this.globals.role;\n\n    //if app is offline, write to indexdb\n    if (status==\"offline\"){\n      this.localservice.addWaterManagement(this.newWaterManagement).\n      then((addedWaterManagements: IWatermanagement[]) => {\n      if (addedWaterManagements.length > 0) {\n        this.watermanagements.push(addedWaterManagements[0]);\n        this.clearNewWaterManagement();\n        alert('Successfully added');\n        location.reload();\n      }\n      })\n      .catch(error => {\n      console.error(error);\n      alert(error.message);\n      });\n    }\n  \n\n  //if app is online, write to cloud (firestore for the time being)\n  else{\n    this.cloudservice.addWaterManagement(this.newWaterManagement);    \n  }\n  }\n\n  clearNewWaterManagement() {\n    this.newWaterManagement = new Watermanagement();\n   }\n\n   onResize(event) {\n    this.breakpoint = (event.target.innerWidth <= 768) ? 1 : 3;\n    //this.breakpoint = (event.target.innerWidth > 500) ? 1 : 3;\n  }\n\n}\n","module.exports = \".text{\\r\\n    float: left;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy93ZWF0aGVyL3dlYXRoZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7Q0FDZiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvd2VhdGhlci93ZWF0aGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGV4dHtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG59Il19 */\"","module.exports = \"<h1>Daily Weather Observations</h1>\\n\\n<p *ngIf=\\\"joke\\\">{{ joke.value }}</p>\\n\\n<mat-grid-list cols=\\\"2\\\" rowHeight=\\\"80px\\\">\\n    <form class=\\\"example-container\\\">\\n      <mat-grid-tile>\\n          <mat-form-field class=\\\"text\\\">\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"newWeather.month\\\" [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Month\\\">\\n          </mat-form-field>\\n      </mat-grid-tile>\\n       <mat-grid-tile>\\n          <mat-form-field>\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"newWeather.day\\\" [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Day\\\">\\n          </mat-form-field>\\n        </mat-grid-tile>\\n        <mat-grid-tile>\\n            <mat-form-field>\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"newWeather.area_ice\\\" [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Percent Area Covered in Ice\\\">\\n            </mat-form-field>\\n        </mat-grid-tile>\\n         <mat-grid-tile>\\n            <mat-form-field>\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"newWeather.ice_thick\\\" [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Thickness of Ice\\\">\\n            </mat-form-field>\\n          </mat-grid-tile>\\n          <mat-grid-tile>\\n              <mat-form-field>\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"newWeather.low_temp\\\" [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Low Temperture\\\">\\n              </mat-form-field>\\n          </mat-grid-tile>\\n           <mat-grid-tile>\\n              <mat-form-field>\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"newWeather.wind_dir\\\" [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Wind Direction\\\">\\n              </mat-form-field>\\n            </mat-grid-tile>\\n            <mat-grid-tile>\\n                <mat-form-field>\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"newWeather.wind_speed\\\" [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Wind Speed\\\">\\n                </mat-form-field>\\n            </mat-grid-tile>\\n             <mat-grid-tile>\\n                <mat-form-field>\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"newWeather.river_stage\\\" [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"River Stage\\\">\\n                </mat-form-field>\\n              </mat-grid-tile>\\n              <mat-grid-tile>\\n                  <mat-form-field>\\n                       <textarea [(ngModel)]=\\\"newWeather.other_observations\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Other Weather Observations\\\"></textarea>\\n                     </mat-form-field>\\n               </mat-grid-tile>\\n               <mat-grid-tile>\\n                  <mat-form-field>\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"newWeather.year\\\" [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Year\\\">\\n                  </mat-form-field>\\n                </mat-grid-tile>\\n\\n\\n <!---      <mat-grid-tile>\\n         <mat-form-field>\\n              <textarea [(ngModel)]=\\\"newWaterManagement.notes\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Notes\\\"></textarea>\\n            </mat-form-field>\\n      </mat-grid-tile>\\n      <mat-grid-tile>\\n          <mat-form-field>\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterManagement.pool\\\" [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Pool\\\">\\n            </mat-form-field> \\n      </mat-grid-tile>\\n    <mat-grid-tile></mat-grid-tile>\\n    <mat-grid-tile></mat-grid-tile>\\n      <mat-grid-tile>\\n          <mat-form-field>\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterManagement.structure\\\" [ngModelOptions]=\\\"{standalone:true}\\\"  matInput placeholder=\\\"Structure\\\">\\n            </mat-form-field>  \\n      </mat-grid-tile>\\n      <mat-grid-tile></mat-grid-tile>\\n      <mat-grid-tile></mat-grid-tile>\\n      <mat-grid-tile>\\n          <mat-form-field>\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterManagement.elevation\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Elevation\\\">\\n            </mat-form-field>   \\n      </mat-grid-tile>\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input type=\\\"text\\\"  matInput placeholder=\\\"PrevElevation\\\">\\n        </mat-form-field>\\n      </mat-grid-tile>\\n      <mat-grid-tile>\\n          <mat-form-field>\\n              <textarea  matInput placeholder=\\\"Previous Notes\\\"></textarea>\\n            </mat-form-field>\\n      </mat-grid-tile>\\n      <mat-grid-tile>\\n          <mat-form-field>\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterManagement.gate_manipulation\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Gate Manipulation\\\">\\n            </mat-form-field>   \\n      </mat-grid-tile>\\n      <mat-grid-tile>\\n          <mat-form-field>\\n            <input type=\\\"text\\\"  matInput placeholder=\\\"PrevElevation\\\">\\n          </mat-form-field>\\n        </mat-grid-tile>\\n      <mat-grid-tile></mat-grid-tile>\\n      <mat-grid-tile>\\n          <mat-form-field>\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterManagement.gate_level\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Gate Level\\\">\\n            </mat-form-field>   \\n      </mat-grid-tile>\\n      <mat-grid-tile>\\n          <mat-form-field>\\n            <input type=\\\"text\\\"  matInput placeholder=\\\"PrevGate_Level\\\">\\n          </mat-form-field>\\n        </mat-grid-tile>\\n      <mat-grid-tile>\\n          <mat-form-field>\\n              <textarea [(ngModel)]=\\\"newWaterManagement.reasons\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Reasons for management action:\\\"></textarea>\\n            </mat-form-field>\\n      </mat-grid-tile>\\n      <mat-grid-tile>\\n          <mat-form-field>\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterManagement.stoplog_change\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Stoplog Change\\\">\\n            </mat-form-field>   \\n      </mat-grid-tile>\\n      <mat-grid-tile>\\n          <mat-form-field>\\n            <input type=\\\"text\\\"  matInput placeholder=\\\"Prev Stoplog Change\\\">\\n          </mat-form-field>\\n        </mat-grid-tile>\\n      <mat-grid-tile></mat-grid-tile>\\n      <mat-grid-tile>\\n          <mat-form-field>\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterManagement.stoplog_level\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Stoplog Level\\\">\\n            </mat-form-field>   \\n      </mat-grid-tile>\\n      <mat-grid-tile>\\n          <mat-form-field>\\n            <input type=\\\"text\\\"  matInput placeholder=\\\"PrevStoploglevel\\\">\\n          </mat-form-field>\\n        </mat-grid-tile>\\n      <mat-grid-tile></mat-grid-tile>\\n      <mat-grid-tile>\\n          <mat-form-field>\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterManagement.duck_numbers\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Duck Numbers\\\">\\n            </mat-form-field>   \\n      </mat-grid-tile>\\n      <mat-grid-tile>\\n          <mat-form-field>\\n            <input type=\\\"text\\\"  matInput placeholder=\\\"PrevDuckNumbers\\\">\\n          </mat-form-field>\\n        </mat-grid-tile>\\n      <mat-grid-tile></mat-grid-tile>\\n      <mat-grid-tile>\\n          <mat-form-field>\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterManagement.goose_numbers\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Goose Numbers\\\">\\n            </mat-form-field>  \\n      </mat-grid-tile>\\n      <mat-grid-tile>\\n          <mat-form-field>\\n            <input type=\\\"text\\\"  matInput placeholder=\\\"PrevDuckNumbers\\\">\\n          </mat-form-field>\\n        </mat-grid-tile>\\n      <mat-grid-tile></mat-grid-tile>\\n      <mat-grid-tile>\\n          <mat-form-field>\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterManagement.year\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Year\\\">\\n            </mat-form-field>  \\n      </mat-grid-tile>\\n      <mat-grid-tile>\\n          <mat-form-field>\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterManagement.fiscal_year\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Fiscal Year\\\">\\n            </mat-form-field>  \\n      </mat-grid-tile>\\n      <mat-grid-tile>\\n          <mat-form-field>\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"newWaterManagement.time\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" matInput placeholder=\\\"Time\\\">\\n            </mat-form-field>  \\n      </mat-grid-tile> -->\\n    </form>\\n  </mat-grid-list>\\n  \\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addWeather()\\\">Add to Local Database</button>\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"clearNewWeather()\\\">Clear Fields</button>\"","import { Component, OnInit } from '@angular/core';\nimport { WeatherLocalService } from 'src/app/service/weather-local.service';\nimport {Globals} from 'src/app/extra/globals';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { WeatherCloudService } from 'src/app/service/weather-cloud.service';\nimport {WeatherApiServiceService} from 'src/app/service/weather-api-service.service'\nimport { HttpClient } from '@angular/common/http';\n\nimport {\n  Weather,\n  IWeather\n} from 'src/app/model/weather';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css'],\n  providers:[WeatherLocalService,WeatherCloudService]\n})\nexport class WeatherComponent implements OnInit {\n\n  private localservice: WeatherLocalService;\n  private cloudservice: WeatherCloudService;\n  watermanagements: any[];\n  newWeather: IWeather = new Weather();\n  local_records: any[];\n\n  joke: any;\n  ress:any;\n\n   constructor(private http: HttpClient,private apiservice:WeatherApiServiceService, private localService: WeatherLocalService, private cloudService:WeatherCloudService, private globals:Globals,private firebase: AngularFireDatabase) {\n      this.localservice = localService;\n      this.cloudservice= cloudService;\n  }\n  ngOnInit() {\n    //this.getWeather();\n    //this.getWeatherapi();\n  }\n\n  //this was function we were using, only commented out so app would build\n/*   getWeatherapi(){\n    this.apiservice.getweather().subscribe(res =>{\n      console.log(res);\n    });\n  } */\n\n  getWeather() {\n    this.localservice.getWeather().\n    then(students => {\n        this.watermanagements = students;\n    }).catch(error => {\n        console.error(error);\n        alert(error.message);\n    });\n}\n\naddWeather() {\n  alert(\"online stat is \"+this.globals.role);\n\n  var status=this.globals.role;\n\n  //if app is offline, write to indexdb\n  if (status==\"offline\"){\n    this.localservice.addWeather(this.newWeather).\n    then((addedWaterManagements: IWeather[]) => {\n    if (addedWaterManagements.length > 0) {\n      this.watermanagements.push(addedWaterManagements[0]);\n      this.clearNewWeather();\n      alert('Successfully added');\n    }\n    })\n    .catch(error => {\n    console.error(error);\n    alert(error.message);\n    });\n  }\n  //if app is online, write to cloud (firestore for the time being)\n  else{\n    this.cloudservice.addWeather(this.newWeather);    \n  }\n  }\n\n  clearNewWeather() {\n    this.newWeather = new Weather();\n   }\n\n}\n","module.exports = \"<h1 mat-dialog-title>Important!</h1>\\r\\n<div mat-dialog-content>\\r\\n  <p *ngIf=\\\"this.globals.role==='offline'\\\">{{this.offline_message}}</p>\\r\\n  <p *ngIf=\\\"this.globals.role==='online'\\\">{{this.online_message}}</p>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button (click)=\\\"onNoClick()\\\">OK</button>\\r\\n</div>\"","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class Globals {\n  logged_in:boolean=false;\n  role: string = 'test';\n  lat:string='test_lat';\n  long:string='test_long';\n}","module.exports = \"<!-- <h1 mat-dialog-title>Important!</h1>\\r\\n<div mat-dialog-content>\\r\\n  <p *ngIf=\\\"this.globals.role==='offline'\\\">{{this.offline_message}}</p>\\r\\n  <p *ngIf=\\\"this.globals.role==='online'\\\">{{this.online_message}}</p>\\r\\n</div>-->\\r\\n\\r\\n<mat-card class=\\\"example-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-title>Login</mat-card-title>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content>\\r\\n          <p> (use username:admin and password:admin)</p>\\r\\n          <form class=\\\"example-form\\\">\\r\\n            <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                  <input matInput placeholder=\\\"Username\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" required>\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n              <td><mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\"type=\\\"password\\\" name=\\\"password\\\" required>\\r\\n              </mat-form-field></td>\\r\\n            </tr></table>\\r\\n          </form>\\r\\n          <!-- <mat-spinner [style.display]=\\\"showSpinner ? 'block' : 'none'\\\"></mat-spinner> -->\\r\\n        </mat-card-content>\\r\\n\\r\\n</mat-card>\\r\\n\\r\\n\\r\\n<button mat-raised-button (click)=\\\"login()\\\" color=\\\"primary\\\">Login</button>\"","import { NgModule } from '@angular/core';\r\n\r\nimport {\r\n  MatButtonModule,\r\n  MatMenuModule,\r\n  MatToolbarModule,\r\n  MatIconModule,\r\n  MatCardModule,\r\n  MatListModule,\r\n  MatSidenavModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatDialogModule,\r\n  MatAutocompleteModule,\r\n  MatSelectModule,\r\n  MatGridListModule,\r\n  MatTableDataSource,\r\n  MatTableModule,\r\n\tMatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatBottomSheetModule,\r\n  MatButtonToggleModule,\r\n  MatProgressSpinnerModule\r\n\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatGridListModule,\r\n    MatTableModule,\r\n    MatSelectModule,\r\n    MatBottomSheetModule,\r\n    MatButtonToggleModule,\r\n    MatProgressSpinnerModule\r\n  ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatListModule,\r\n    MatSidenavModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatDialogModule,\r\n    MatAutocompleteModule,\r\n    MatGridListModule,\r\n    MatTableModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatBottomSheetModule,\r\n    MatButtonToggleModule,\r\n    MatProgressSpinnerModule\r\n  ]\r\n})\r\nexport class MaterialModule {}","export class IFoodAvail {\n\n    id?: number;\n    month: string;\n    day: string;\n    year: string;\n    structure: string;\n    corn_unharv:string;\n    corn_harv:string;\n    corn_yield:string;\n    corn_yield_field:string;\n    beans_unharv:string;\n    beans_harv:string;\n    beans_yield:string;\n    beans_yield_field:string;\n    milo_unharv:string;\n    milo_harv:string;\n    milo_yield:string;\n    milo_yield_field:string;\n    wheat_green:string;\n    wheat_harv:string;\n    soil_standing:string;\n    soil_mowed:string;\n    soil_disced:string;\n    yield_score:string;\n}\n\nexport class FoodAvail implements IFoodAvail {\n    id?: 0;\n    month: \"\";\n    day: \"\";\n    year: \"\";\n    structure: \"\";\n    corn_unharv:\"\";\n    corn_harv:\"\";\n    corn_yield:\"\";\n    corn_yield_field:\"\";\n    beans_unharv:\"\";\n    beans_harv:\"\";\n    beans_yield:\"\";\n    beans_yield_field:\"\";\n    milo_unharv:\"\";\n    milo_harv:\"\";\n    milo_yield:\"\";\n    milo_yield_field:\"\";\n    wheat_green:\"\";\n    wheat_harv:\"\";\n    soil_standing:\"\";\n    soil_mowed:\"\";\n    soil_disced:\"\";\n    yield_score:\"\";\n}","export class IWaterFood {\n    id?: number;\n    month: string;\n    day: string;\n    pool: string;\n    percent_of_full_pool: string;\n    less_than_six:string;\n    seven_to_twelve:string;\n    thirteen_or_more:string;\n    habitat_standing:string;\n    habitat_mowed:string;\n    habitat_disced:string;\n    habitat_unharv_corn:string;\n    habitat_harv_corn:string;\n    habitat_unharv_milo:string;\n    habitat_harv_milo:string;\n    habitat_unharv_beans:string;\n    habitat_harv_beans:string;\n    habitat_browse:string;\n    ice_standing:string;\n    ice_mowed:string;\n    ice_disced:string;\n    ice_unharv_corn:string;\n    ice_harv_corn:string;\n    ice_unharv_milo:string;\n    ice_harv_milo:string;\n    ice_unharv_beans:string;\n    ice_harv_beans:string;\n    ice_browse:string;\n    notes:string;\n    actions:string;\n    response:string;\n    year:string;\n    time:string;\n    fiscal_year:string;\n}\n\nexport class WaterFood implements IWaterFood {\n    id?: 0;\n    month:'';\n    day: '';\n    pool: '';\n    percent_of_full_pool: '';\n    less_than_six:'';\n    seven_to_twelve:'';\n    thirteen_or_more:'';\n    habitat_standing:'';\n    habitat_mowed:'';\n    habitat_disced:'';\n    habitat_unharv_corn:'';\n    habitat_harv_corn:'';\n    habitat_unharv_milo:'';\n    habitat_harv_milo:'';\n    habitat_unharv_beans:'';\n    habitat_harv_beans:'';\n    habitat_browse:'';\n    ice_standing:'';\n    ice_mowed:'';\n    ice_disced:'';\n    ice_unharv_corn:'';\n    ice_harv_corn:'';\n    ice_unharv_milo:'';\n    ice_harv_milo:'';\n    ice_unharv_beans:'';\n    ice_harv_beans:'';\n    ice_browse:'';\n    notes:'';\n    actions:'';\n    response:'';\n    year:'';\n    time:'';\n    fiscal_year:'';\n}","export class IWatermanagement {\n\n        id?: number;\n        date: string;\n        pool: string;\n        structure: string;\n        elevation: string;\n        gate_manipulation:string;\n        gate_level:string;\n        stoplog_change:string;\n        stoplog_level:string;\n        duck_numbers:string;\n        goose_numbers:string;\n        year:string;\n        time:string;\n        fiscal_year:string;\n        notes:string;\n        reasons:string;\n}\n\nexport class Watermanagement implements IWatermanagement {\n    id: 0;\n    date: '';\n    pool: '';\n    structure: '';\n    elevation: '';\n    gate_manipulation:'';\n    gate_level:'';\n    stoplog_change:'';\n    stoplog_level:'';\n    duck_numbers:'';\n    goose_numbers:'';\n    year:'';\n    time:'';\n    fiscal_year:'';\n    notes:'';\n    reasons:'';\n}","export class IWeather {\n\n    id?: number;\n    month: string;\n    day: string;\n    area_ice: string;\n    ice_thick: string;\n    low_temp:string;\n    wind_dir:string;\n    wind_speed:string;\n    river_stage:string;\n    other_observations:string;\n    year:string;\n}\n\nexport class Weather implements IWeather {\n    id: 0;\n    month: \"\";\n    day: \"\";\n    area_ice: \"\";\n    ice_thick: \"\";\n    low_temp:\"\";\n    wind_dir:\"\";\n    wind_speed:\"\";\n    river_stage:\"\";\n    other_observations:\"\";\n    year:\"\";\n}","import {\n  IdbService\n } from './idb.service';\n import {\n  IDataBase,\n  DATA_TYPE,\n  ITable\n } from 'jsstore';\nimport { IFoodAvail } from '../model/food-avail';\n export class BaseService {\n  dbname = 'Waterfowl_Wetland_Management';\n  constructor() {\n   // turn on jsstore log status - help you to debug\n   // turn off it in production or when you dont need\n   this.connection.setLogStatus(true);\n   this.initJsStore();\n  }\n get connection() {\n   return IdbService.idbCon;\n  }\n initJsStore() {\n   this.connection.isDbExist(this.dbname).then(isExist => {\n    if (isExist) {\n      console.log(\"in here\")\n     this.connection.openDb(this.dbname);\n    } else {\n      console.log(\"in there\")\n     const dataBase = this.getDatabase();\n     this.connection.createDb(dataBase);\n    }\n   }).catch(err => {\n    // this will be fired when indexedDB is not supported.\n    alert(err.message);\n   });\n  }\n private getDatabase() {\n   const tblWaterManagement: ITable = {\n    name: 'WaterManagement',\n    columns: [{\n      name: 'id',\n      primaryKey: true,\n      autoIncrement: true\n     },\n     {\n      name: 'date',\n      //notNull: true,\n      dataType: DATA_TYPE.String\n     },\n     {\n      name: 'pool',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'structure',\n      dataType: DATA_TYPE.String\n     },\n     {\n      name: 'elevation',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'gate_manipulation',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'gate_level',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'stoplog_change',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'stoplog_level',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'duck_numbers',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'goose_numbers',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'year',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'time',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'fiscal_year',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'notes',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'reasons',\n      dataType: DATA_TYPE.String,\n     }\n    ],\n  }\n  const tblWeather: ITable = {\n    name: 'Daily_Weather_Observations',\n    columns: [{\n      name: 'id',\n      primaryKey: true,\n      autoIncrement: true\n     },\n     {\n      name: 'month',\n      //notNull: true,\n      dataType: DATA_TYPE.String\n     },\n     {\n      name: 'day',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'area_ice',\n      dataType: DATA_TYPE.String\n     },\n     {\n      name: 'ice_thick',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'low_temp',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'wind_dir',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'wind_speed',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'river_stage',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'other_observations',\n      dataType: DATA_TYPE.String,\n     }\n    ]\n  };\n  const tblWaterFood: ITable = {\n    name: 'Biweekly_Water_Status_and_Food_Availability',\n    columns: [{\n      name: 'id',\n      primaryKey: true,\n      autoIncrement: true\n     },\n     {\n      name: 'month',\n      //notNull: true,\n      dataType: DATA_TYPE.String\n     },\n     {\n      name: 'day',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'pool',\n      dataType: DATA_TYPE.String\n     },\n     {\n      name: 'percent_of_full_pool',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'less_than_six',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'seven_to_twelve',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'thirteen_or_more',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'habitat_standing',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'habitat_mowed',\n      dataType: DATA_TYPE.String,\n     },    \n     {\n      name: 'habitat_disced',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'habitat_unharv_corn',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'habitat_harv_corn',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'habitat_unharv_milo',\n      dataType: DATA_TYPE.String,\n     },     \n     {\n      name: 'habitat_harv_milo',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'habitat_unharv_beans',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'habitat_harv_beans',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'habitat_browse',\n      dataType: DATA_TYPE.String,\n     },\n     ,\n     {\n      name: 'ice_standing',\n      dataType: DATA_TYPE.String,\n     },     \n     {\n      name: 'ice_mowed',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'ice_descend',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'ice_unharv_corn',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'ice_harv_corn',\n      dataType: DATA_TYPE.String,\n     },     \n     {\n      name: 'ice_unharv_milo',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'ice_harv_milo',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'ice_unharv_beans',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'ice_harv_beans',\n      dataType: DATA_TYPE.String,\n     },     \n     {\n      name: 'ice_unharv_beans',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'ice_browse',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'notes',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'actions',\n      dataType: DATA_TYPE.String,\n     },    \n     {\n      name: 'response',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'year',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'time',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'fiscal_year',\n      dataType: DATA_TYPE.String,\n     },\n    ]\n  };\n\n  const tblFoodAvail: ITable = {\n    name: 'Fall_Food_Availability',\n    columns: [{\n      name: 'id',\n      primaryKey: true,\n      autoIncrement: true\n     },\n     {\n      name: 'month',\n      //notNull: true,\n      dataType: DATA_TYPE.String\n     },\n     {\n      name: 'day',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'year',\n      dataType: DATA_TYPE.String\n     },\n     {\n      name: 'structure',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'corn_unharv',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'corn_harv',\n      dataType: DATA_TYPE.String,\n     },     \n     {\n      name: 'corn_yield',\n      dataType: DATA_TYPE.String,\n     },     \n     {\n      name: 'corn_yield_field',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'beans_unharv',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'beans_harv',\n      dataType: DATA_TYPE.String,\n     },     \n     {\n      name: 'beans_yield',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'beans_yield_field',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'milo_unharv',\n      dataType: DATA_TYPE.String,\n     },    \n     {\n      name: 'milo_harv',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'milo_yield',\n      dataType: DATA_TYPE.String,\n     },\n     ,\n     {\n      name: 'milo_yield_field',\n      dataType: DATA_TYPE.String,\n     },     \n     {\n      name: 'wheat_green',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'wheat_harv',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'soil_standing',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'soil_mowed',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'soil_disced',\n      dataType: DATA_TYPE.String,\n     },\n     {\n      name: 'yield_score',\n      dataType: DATA_TYPE.String,\n     },     \n    ]\n  };\n\n\n   const dataBase: IDataBase = {\n    name: this.dbname,\n    tables: [tblWaterManagement,tblWeather,tblWaterFood,tblFoodAvail]\n   };\n   return dataBase;\n  }\n }","import { Injectable } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { Observable } from 'rxjs/Observable';\nimport * as Rx from 'rxjs';\n\n@Injectable()\nexport class ChartService {\n\tprivate sidenav: MatSidenav;\n\n\tpublic setSidenav(sidenav: MatSidenav) {\n    this.sidenav = sidenav;\n    console.log(\"4 it is\"+this.sidenav)\n\t}\n\n\tpublic open() {\n\t\treturn this.sidenav.open();\n\t}\n\n\n\tpublic close() {\n\t\treturn this.sidenav.close();\n\t}\n\n\tpublic toggle(): void {\n    console.log(\"3 it is\"+this.sidenav)\n\t\tthis.sidenav.toggle();\n\t}\n}","import {\n  Injectable\n } from '@angular/core';\n import {\n  BaseService\n } from './base.service';\n\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n \nimport { IFoodAvail } from '../model/food-avail';\n @Injectable({\n  providedIn: 'root'\n })\n export class FoodAvailLocalService extends BaseService {\n  \n  constructor() {\n   super();\n  }\n\n  getWaterManagment() {\n    return this.connection.select({\n      from: 'Fall_Food_Availability'\n    });\n  }\n\n  addWaterManagement(watermangement: IFoodAvail) {\n    return this.connection.insert({\n      into: 'Fall_Food_Availability',\n      return: true, // as id is autoincrement, so we would like to    get the inserted value\n      values: [watermangement]\n    });\n  }\n  \n  deleteWaterManagement(the_id){\n    return this.connection.remove({\n      from: 'Fall_Food_Availability',\n      where: {\n        id:the_id\n      }\n    });\n  }\n}","import * as JsStore from 'jsstore';\nimport * as workerPath from 'file-loader?name=scripts/[name].[hash].js!jsstore/dist/jsstore.worker.min.js';\nexport class IdbService {\n // this will make sure that we are using one connection\n // otherwise multiple instance will be created and thus multiple \n // worker and that may create some problems\n static idbCon = new JsStore.Instance(new Worker(workerPath));\n}\n\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationService {\n\n  constructor() { }\n  public currentLocation;\n\n  get_location(){\n    window.navigator.geolocation.getCurrentPosition(\n      (position) => {\n        /* Location tracking code */\n        this.currentLocation = position.coords.latitude;\n        console.log(\"right here it is\"+this.currentLocation)\n        \n      },\n      (failure) => {\n        if (failure.message.indexOf(\"Only secure origins are allowed\") == 0) {\n          alert('Only secure origins are allowed by your browser.');\n        }\n      }\n    )\n      return this.currentLocation;\n\n  }\n}\n","import {ElementRef, Injectable} from '@angular/core';\nimport { loadModules } from 'esri-loader';\nimport esri = __esri;\n\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class MapServiceexService {\n\n  constructor(private http: HttpClient) { }\n\n  private map;\n\n  loadMap(basemap: String, center: Array<number>, zoom: Number, mapContainer: ElementRef) {\n\n    const promise = new Promise((resolve, reject) => {\n      loadModules([\n        'esri/Map',\n        'esri/views/MapView',\n        'esri/layers/Layer'\n      ])\n        .then(([EsriMap, EsriMapView, Layer]) => {\n\n          const map: esri.Map = new EsriMap({\n            basemap: basemap\n          });\n\n          let mapView: esri.MapView = new EsriMapView({\n            container: mapContainer.nativeElement,\n            center: center,\n            zoom: zoom,\n            map: map\n          });\n\n          mapView.when(() => {\n            // All the resources in the MapView and the map have loaded. Now execute additional processes\n            resolve('true');\n          }, err => {\n            console.error(err);\n            reject(err);\n          });\n\n          Layer.fromPortalItem({\n            portalItem: { // autocasts as new PortalItem()\n              id: \"e9bfc0dcd15a41c18c79bd30bb6056cc\"\n            }\n          }).then(addLayer)\n          .catch(rejection);\n     // Adds the layer to the map once it loads\n     function addLayer(layer) {\n      map.add(layer);\n    }\n\n    function rejection(error) {\n      console.log(\"Layer failed to load: \", error);\n    }\n\n        })\n        .catch(err => {\n          console.error(err);\n          reject(err);\n        });\n    });\n\n    return promise;\n    }\n\n\n    gimmeJokes() {\n      return this.http.get('https://api.chucknorris.io/jokes/random')\n    }\n}\n","import {\n  Injectable\n } from '@angular/core';\n import {\n  BaseService\n } from './base.service';\n\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n \nimport { IWaterFood } from '../model/water-food';\n @Injectable({\n  providedIn: 'root'\n })\n export class LocalWaterFood extends BaseService {\n  \n  constructor() {\n   super();\n  }\n\n  getWaterManagment() {\n    return this.connection.select({\n      from: 'Biweekly_Water_Status_and_Food_Availability'\n    });\n  }\n\n  addWaterManagement(watermangement: IWaterFood) {\n    return this.connection.insert({\n      into: 'Biweekly_Water_Status_and_Food_Availability',\n      return: true, // as id is autoincrement, so we would like to    get the inserted value\n      values: [watermangement]\n    });\n  }\n  \n  deleteWaterManagement(the_id){\n    return this.connection.remove({\n      from: 'Biweekly_Water_Status_and_Food_Availability',\n      where: {\n        id:the_id\n      }\n    });\n  }\n}","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { IWatermanagement } from 'src/app/model/watermanagement';\nimport { AngularFirestore } from 'angularfire2/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WatermanagementCloudService {\n\n  constructor(public db: AngularFirestore) { }\n\n   addWaterManagement(watermanagement:IWatermanagement) {\n    return this.db.collection('Watermanagement').add({\n      date: watermanagement.date,\n      pool: watermanagement.pool,\n      structure: watermanagement.structure,\n      elevation: watermanagement.elevation,\n      gate_manipulation: watermanagement.gate_manipulation,\n      gate_level: watermanagement.gate_level,\n      stoplog_change: watermanagement.stoplog_change,\n      stoplog_level:watermanagement.stoplog_level,\n      goose_numbers:watermanagement.goose_numbers,\n      duck_numbers:watermanagement.duck_numbers,\n      year:watermanagement.year,\n      time:watermanagement.time,\n      fiscal_year:watermanagement.fiscal_year,\n      notes:watermanagement.notes,\n      reasons:watermanagement.reasons\n    });\n  }\n}\n","import {\n  Injectable\n } from '@angular/core';\n import {\n  BaseService\n } from './base.service';\n\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n \nimport { IWatermanagement } from '../model/watermanagement';\n @Injectable({\n  providedIn: 'root'\n })\n export class LocalWaterManagementService extends BaseService {\n  \n  constructor() {\n   super();\n  }\n\n  getWaterManagment() {\n    return this.connection.select({\n      from: 'WaterManagement'\n    });\n  }\n\n  addWaterManagement(watermangement: IWatermanagement) {\n    return this.connection.insert({\n      into: 'WaterManagement',\n      return: true, // as id is autoincrement, so we would like to    get the inserted value\n      values: [watermangement]\n    });\n  }\n  \n  deleteWaterManagement(the_id){\n    return this.connection.remove({\n      from: 'WaterManagement',\n      where: {\n        id:the_id\n      }\n    });\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Globals} from 'src/app/extra/globals';\nimport { last } from '@angular/router/src/utils/collection';\nimport {LocationService} from 'src/app/service/location.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherApiServiceService {\n\n  public lat;\n  public long;\n  public currentLocation;\n  private locationservice;\n  private joke;\n\n  constructor(private http: HttpClient,private globals:Globals,locationservice:LocationService) { \n    this.locationservice=locationservice;\n\n  }\n\n  getweather(){\n\n    //this format works\n    //const url = this.http.get('http://api.openweathermap.org/data/2.5/forecast?id=524901&APPID=80dc87045d3dae46154b1dc9f2455de1')\n    //console.log(url)\n\n    if (navigator.geolocation) {\n      return navigator.geolocation.getCurrentPosition((position)=>{\n        this.long = position.coords.longitude;\n        this.lat = position.coords.latitude;\n        console.log(this.long)\n        console.log(this.lat)\n        const res = this.http.get(\"api.openweathermap.org/data/2.5/weather?lat=\"+this.lat+\"&lon=\"+this.long)\n        console.log(res)\n\n        return res;\n\n      });\n    } \n\n    else {\n      console.log(\"No support for geolocation\")\n    }\n \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { IWeather } from 'src/app/model/weather';\nimport { AngularFirestore } from 'angularfire2/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherCloudService {\n\n\n  constructor(public db: AngularFirestore) { }\n\n   addWeather(weather:IWeather) {\n    return this.db.collection('Daily_Weather_Observations').add({\n      month: weather.month,\n      day: weather.day,\n      area_ice: weather.area_ice,\n      ice_thick: weather.ice_thick,\n      low_temp: weather.low_temp,\n      wind_dir: weather.wind_dir,\n      wind_speed: weather.wind_speed,\n      river_stage:weather.river_stage,\n      other_observations:weather.other_observations,\n      year:weather.year,\n    });\n  }\n}\n","import {\n  Injectable\n } from '@angular/core';\n import {\n  BaseService\n } from './base.service';\n\n\n import { Observable } from 'rxjs';\n import { map } from 'rxjs/operators';\n  \n import { IWeather } from '../model/weather';\n  @Injectable({\n   providedIn: 'root'\n  })\n\nexport class WeatherLocalService extends BaseService {\n\n  constructor() { \n    super();\n  }\n\n  getWeather() {\n    return this.connection.select({\n      from: 'Daily_Weather_Observations'\n    });\n  }\n\n  addWeather(weather: IWeather) {\n    return this.connection.insert({\n      into: 'Daily_Weather_Observations',\n      return: true, // as id is autoincrement, so we would like to    get the inserted value\n      values: [weather]\n    });\n  }\n  \n  deleteWeather(the_id){\n    return this.connection.remove({\n      from: 'Daily_Weather_Observations',\n      where: {\n        id:the_id\n      }\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n\n\n  //added this so we can interact with firebase\n  firebase: {\n    apiKey: \"AIzaSyAJEdJ4jjbDdeCsWDlWJZ0ZRVBZfOJplMA\",\n    authDomain: \"ducks-110db.firebaseapp.com\",\n    databaseURL: \"https://ducks-110db.firebaseio.com\",\n    projectId: \"ducks-110db\",\n    storageBucket: \"ducks-110db.appspot.com\",\n    messagingSenderId: \"821238658885\"\n  }\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}